/*
 * This file was generated by orbit-idl-2 - DO NOT EDIT!
 */

#ifndef DsLogAdmin_H
#define DsLogAdmin_H 1
#include <glib.h>
#define ORBIT_IDL_SERIAL 20
#include <orbit/orbit-types.h>

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */


/** typedefs **/
#if !defined(_TimeBase_TimeT_defined)
#define _TimeBase_TimeT_defined 1
typedef CORBA_unsigned_long_long TimeBase_TimeT;
#define TimeBase_TimeT_marshal(x,y,z) CORBA_unsigned_long_long_marshal((x),(y),(z))
#define TimeBase_TimeT_demarshal(x,y,z,i) CORBA_unsigned_long_long_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_TimeBase_TimeT_0)
#define TC_IMPL_TC_TimeBase_TimeT_0 'D'
#define TC_IMPL_TC_TimeBase_TimeT_1 's'
#define TC_IMPL_TC_TimeBase_TimeT_2 'L'
#define TC_IMPL_TC_TimeBase_TimeT_3 'o'
#define TC_IMPL_TC_TimeBase_TimeT_4 'g'
#define TC_IMPL_TC_TimeBase_TimeT_5 'A'
#define TC_IMPL_TC_TimeBase_TimeT_6 'd'
#define TC_IMPL_TC_TimeBase_TimeT_7 'm'
#define TC_IMPL_TC_TimeBase_TimeT_8 'i'
#define TC_IMPL_TC_TimeBase_TimeT_9 'n'
#ifdef ORBIT_IDL_C_IMODULE_DsLogAdmin
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_TimeBase_TimeT_struct;
#define TC_TimeBase_TimeT ((CORBA_TypeCode)&TC_TimeBase_TimeT_struct)
#endif
#define TimeBase_TimeT__alloc() ((TimeBase_TimeT *)ORBit_small_alloc (TC_CORBA_unsigned_long_long))
#define TimeBase_TimeT__freekids(m,d) ORBit_small_freekids (TC_CORBA_unsigned_long_long,(m),(d))
#endif
#if !defined(_TimeBase_InaccuracyT_defined)
#define _TimeBase_InaccuracyT_defined 1
typedef TimeBase_TimeT TimeBase_InaccuracyT;
#define TimeBase_InaccuracyT_marshal(x,y,z) TimeBase_TimeT_marshal((x),(y),(z))
#define TimeBase_InaccuracyT_demarshal(x,y,z,i) TimeBase_TimeT_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_TimeBase_InaccuracyT_0)
#define TC_IMPL_TC_TimeBase_InaccuracyT_0 'D'
#define TC_IMPL_TC_TimeBase_InaccuracyT_1 's'
#define TC_IMPL_TC_TimeBase_InaccuracyT_2 'L'
#define TC_IMPL_TC_TimeBase_InaccuracyT_3 'o'
#define TC_IMPL_TC_TimeBase_InaccuracyT_4 'g'
#define TC_IMPL_TC_TimeBase_InaccuracyT_5 'A'
#define TC_IMPL_TC_TimeBase_InaccuracyT_6 'd'
#define TC_IMPL_TC_TimeBase_InaccuracyT_7 'm'
#define TC_IMPL_TC_TimeBase_InaccuracyT_8 'i'
#define TC_IMPL_TC_TimeBase_InaccuracyT_9 'n'
#ifdef ORBIT_IDL_C_IMODULE_DsLogAdmin
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_TimeBase_InaccuracyT_struct;
#define TC_TimeBase_InaccuracyT ((CORBA_TypeCode)&TC_TimeBase_InaccuracyT_struct)
#endif
#define TimeBase_InaccuracyT__alloc() ((TimeBase_InaccuracyT *)ORBit_small_alloc (TC_CORBA_unsigned_long_long))
#define TimeBase_InaccuracyT__freekids(m,d) ORBit_small_freekids (TC_CORBA_unsigned_long_long,(m),(d))
#endif
#if !defined(_TimeBase_TdfT_defined)
#define _TimeBase_TdfT_defined 1
typedef CORBA_short TimeBase_TdfT;
#define TimeBase_TdfT_marshal(x,y,z) CORBA_short_marshal((x),(y),(z))
#define TimeBase_TdfT_demarshal(x,y,z,i) CORBA_short_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_TimeBase_TdfT_0)
#define TC_IMPL_TC_TimeBase_TdfT_0 'D'
#define TC_IMPL_TC_TimeBase_TdfT_1 's'
#define TC_IMPL_TC_TimeBase_TdfT_2 'L'
#define TC_IMPL_TC_TimeBase_TdfT_3 'o'
#define TC_IMPL_TC_TimeBase_TdfT_4 'g'
#define TC_IMPL_TC_TimeBase_TdfT_5 'A'
#define TC_IMPL_TC_TimeBase_TdfT_6 'd'
#define TC_IMPL_TC_TimeBase_TdfT_7 'm'
#define TC_IMPL_TC_TimeBase_TdfT_8 'i'
#define TC_IMPL_TC_TimeBase_TdfT_9 'n'
#ifdef ORBIT_IDL_C_IMODULE_DsLogAdmin
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_TimeBase_TdfT_struct;
#define TC_TimeBase_TdfT ((CORBA_TypeCode)&TC_TimeBase_TdfT_struct)
#endif
#define TimeBase_TdfT__alloc() ((TimeBase_TdfT *)ORBit_small_alloc (TC_CORBA_short))
#define TimeBase_TdfT__freekids(m,d) ORBit_small_freekids (TC_CORBA_short,(m),(d))
#endif
#if !defined(_TimeBase_UtcT_defined)
#define _TimeBase_UtcT_defined 1
typedef struct TimeBase_UtcT_type TimeBase_UtcT;
struct TimeBase_UtcT_type {
TimeBase_TimeT time;
CORBA_unsigned_long inacclo;
CORBA_unsigned_short inacchi;
TimeBase_TdfT tdf;
};

#if !defined(TC_IMPL_TC_TimeBase_UtcT_0)
#define TC_IMPL_TC_TimeBase_UtcT_0 'D'
#define TC_IMPL_TC_TimeBase_UtcT_1 's'
#define TC_IMPL_TC_TimeBase_UtcT_2 'L'
#define TC_IMPL_TC_TimeBase_UtcT_3 'o'
#define TC_IMPL_TC_TimeBase_UtcT_4 'g'
#define TC_IMPL_TC_TimeBase_UtcT_5 'A'
#define TC_IMPL_TC_TimeBase_UtcT_6 'd'
#define TC_IMPL_TC_TimeBase_UtcT_7 'm'
#define TC_IMPL_TC_TimeBase_UtcT_8 'i'
#define TC_IMPL_TC_TimeBase_UtcT_9 'n'
#ifdef ORBIT_IDL_C_IMODULE_DsLogAdmin
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_TimeBase_UtcT_struct;
#define TC_TimeBase_UtcT ((CORBA_TypeCode)&TC_TimeBase_UtcT_struct)
#endif
#define TimeBase_UtcT__alloc() ((TimeBase_UtcT *)ORBit_small_alloc (TC_TimeBase_UtcT))
#define TimeBase_UtcT__freekids(m,d) ORBit_small_freekids (TC_TimeBase_UtcT,(m),(d))
#endif
#if !defined(_TimeBase_IntervalT_defined)
#define _TimeBase_IntervalT_defined 1
typedef struct TimeBase_IntervalT_type TimeBase_IntervalT;
struct TimeBase_IntervalT_type {
TimeBase_TimeT lower_bound;
TimeBase_TimeT upper_bound;
};

#if !defined(TC_IMPL_TC_TimeBase_IntervalT_0)
#define TC_IMPL_TC_TimeBase_IntervalT_0 'D'
#define TC_IMPL_TC_TimeBase_IntervalT_1 's'
#define TC_IMPL_TC_TimeBase_IntervalT_2 'L'
#define TC_IMPL_TC_TimeBase_IntervalT_3 'o'
#define TC_IMPL_TC_TimeBase_IntervalT_4 'g'
#define TC_IMPL_TC_TimeBase_IntervalT_5 'A'
#define TC_IMPL_TC_TimeBase_IntervalT_6 'd'
#define TC_IMPL_TC_TimeBase_IntervalT_7 'm'
#define TC_IMPL_TC_TimeBase_IntervalT_8 'i'
#define TC_IMPL_TC_TimeBase_IntervalT_9 'n'
#ifdef ORBIT_IDL_C_IMODULE_DsLogAdmin
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_TimeBase_IntervalT_struct;
#define TC_TimeBase_IntervalT ((CORBA_TypeCode)&TC_TimeBase_IntervalT_struct)
#endif
#define TimeBase_IntervalT__alloc() ((TimeBase_IntervalT *)ORBit_small_alloc (TC_TimeBase_IntervalT))
#define TimeBase_IntervalT__freekids(m,d) ORBit_small_freekids (TC_TimeBase_IntervalT,(m),(d))
#endif
#undef ex_DsLogAdmin_InvalidParam
#define ex_DsLogAdmin_InvalidParam "IDL:omg.org/DsLogAdmin/InvalidParam:1.0"
#if !defined(_DsLogAdmin_InvalidParam_defined)
#define _DsLogAdmin_InvalidParam_defined 1
typedef struct DsLogAdmin_InvalidParam_type DsLogAdmin_InvalidParam;
struct DsLogAdmin_InvalidParam_type {
CORBA_string details;
};

#if !defined(TC_IMPL_TC_DsLogAdmin_InvalidParam_0)
#define TC_IMPL_TC_DsLogAdmin_InvalidParam_0 'D'
#define TC_IMPL_TC_DsLogAdmin_InvalidParam_1 's'
#define TC_IMPL_TC_DsLogAdmin_InvalidParam_2 'L'
#define TC_IMPL_TC_DsLogAdmin_InvalidParam_3 'o'
#define TC_IMPL_TC_DsLogAdmin_InvalidParam_4 'g'
#define TC_IMPL_TC_DsLogAdmin_InvalidParam_5 'A'
#define TC_IMPL_TC_DsLogAdmin_InvalidParam_6 'd'
#define TC_IMPL_TC_DsLogAdmin_InvalidParam_7 'm'
#define TC_IMPL_TC_DsLogAdmin_InvalidParam_8 'i'
#define TC_IMPL_TC_DsLogAdmin_InvalidParam_9 'n'
#ifdef ORBIT_IDL_C_IMODULE_DsLogAdmin
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_DsLogAdmin_InvalidParam_struct;
#define TC_DsLogAdmin_InvalidParam ((CORBA_TypeCode)&TC_DsLogAdmin_InvalidParam_struct)
#endif
#define DsLogAdmin_InvalidParam__alloc() ((DsLogAdmin_InvalidParam *)ORBit_small_alloc (TC_DsLogAdmin_InvalidParam))
#define DsLogAdmin_InvalidParam__freekids(m,d) ORBit_small_freekids (TC_DsLogAdmin_InvalidParam,(m),(d))
#endif
#undef ex_DsLogAdmin_InvalidThreshold
#define ex_DsLogAdmin_InvalidThreshold "IDL:omg.org/DsLogAdmin/InvalidThreshold:1.0"
#if !defined(_DsLogAdmin_InvalidThreshold_defined)
#define _DsLogAdmin_InvalidThreshold_defined 1
typedef struct DsLogAdmin_InvalidThreshold_type DsLogAdmin_InvalidThreshold;
struct DsLogAdmin_InvalidThreshold_type {
int dummy;
};

#if !defined(TC_IMPL_TC_DsLogAdmin_InvalidThreshold_0)
#define TC_IMPL_TC_DsLogAdmin_InvalidThreshold_0 'D'
#define TC_IMPL_TC_DsLogAdmin_InvalidThreshold_1 's'
#define TC_IMPL_TC_DsLogAdmin_InvalidThreshold_2 'L'
#define TC_IMPL_TC_DsLogAdmin_InvalidThreshold_3 'o'
#define TC_IMPL_TC_DsLogAdmin_InvalidThreshold_4 'g'
#define TC_IMPL_TC_DsLogAdmin_InvalidThreshold_5 'A'
#define TC_IMPL_TC_DsLogAdmin_InvalidThreshold_6 'd'
#define TC_IMPL_TC_DsLogAdmin_InvalidThreshold_7 'm'
#define TC_IMPL_TC_DsLogAdmin_InvalidThreshold_8 'i'
#define TC_IMPL_TC_DsLogAdmin_InvalidThreshold_9 'n'
#ifdef ORBIT_IDL_C_IMODULE_DsLogAdmin
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_DsLogAdmin_InvalidThreshold_struct;
#define TC_DsLogAdmin_InvalidThreshold ((CORBA_TypeCode)&TC_DsLogAdmin_InvalidThreshold_struct)
#endif
#define DsLogAdmin_InvalidThreshold__alloc() ((DsLogAdmin_InvalidThreshold *)ORBit_small_alloc (TC_DsLogAdmin_InvalidThreshold))
#define DsLogAdmin_InvalidThreshold__freekids(m,d) ORBit_small_freekids (TC_DsLogAdmin_InvalidThreshold,(m),(d))
#endif
#undef ex_DsLogAdmin_InvalidTime
#define ex_DsLogAdmin_InvalidTime "IDL:omg.org/DsLogAdmin/InvalidTime:1.0"
#if !defined(_DsLogAdmin_InvalidTime_defined)
#define _DsLogAdmin_InvalidTime_defined 1
typedef struct DsLogAdmin_InvalidTime_type DsLogAdmin_InvalidTime;
struct DsLogAdmin_InvalidTime_type {
int dummy;
};

#if !defined(TC_IMPL_TC_DsLogAdmin_InvalidTime_0)
#define TC_IMPL_TC_DsLogAdmin_InvalidTime_0 'D'
#define TC_IMPL_TC_DsLogAdmin_InvalidTime_1 's'
#define TC_IMPL_TC_DsLogAdmin_InvalidTime_2 'L'
#define TC_IMPL_TC_DsLogAdmin_InvalidTime_3 'o'
#define TC_IMPL_TC_DsLogAdmin_InvalidTime_4 'g'
#define TC_IMPL_TC_DsLogAdmin_InvalidTime_5 'A'
#define TC_IMPL_TC_DsLogAdmin_InvalidTime_6 'd'
#define TC_IMPL_TC_DsLogAdmin_InvalidTime_7 'm'
#define TC_IMPL_TC_DsLogAdmin_InvalidTime_8 'i'
#define TC_IMPL_TC_DsLogAdmin_InvalidTime_9 'n'
#ifdef ORBIT_IDL_C_IMODULE_DsLogAdmin
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_DsLogAdmin_InvalidTime_struct;
#define TC_DsLogAdmin_InvalidTime ((CORBA_TypeCode)&TC_DsLogAdmin_InvalidTime_struct)
#endif
#define DsLogAdmin_InvalidTime__alloc() ((DsLogAdmin_InvalidTime *)ORBit_small_alloc (TC_DsLogAdmin_InvalidTime))
#define DsLogAdmin_InvalidTime__freekids(m,d) ORBit_small_freekids (TC_DsLogAdmin_InvalidTime,(m),(d))
#endif
#undef ex_DsLogAdmin_InvalidTimeInterval
#define ex_DsLogAdmin_InvalidTimeInterval "IDL:omg.org/DsLogAdmin/InvalidTimeInterval:1.0"
#if !defined(_DsLogAdmin_InvalidTimeInterval_defined)
#define _DsLogAdmin_InvalidTimeInterval_defined 1
typedef struct DsLogAdmin_InvalidTimeInterval_type DsLogAdmin_InvalidTimeInterval;
struct DsLogAdmin_InvalidTimeInterval_type {
int dummy;
};

#if !defined(TC_IMPL_TC_DsLogAdmin_InvalidTimeInterval_0)
#define TC_IMPL_TC_DsLogAdmin_InvalidTimeInterval_0 'D'
#define TC_IMPL_TC_DsLogAdmin_InvalidTimeInterval_1 's'
#define TC_IMPL_TC_DsLogAdmin_InvalidTimeInterval_2 'L'
#define TC_IMPL_TC_DsLogAdmin_InvalidTimeInterval_3 'o'
#define TC_IMPL_TC_DsLogAdmin_InvalidTimeInterval_4 'g'
#define TC_IMPL_TC_DsLogAdmin_InvalidTimeInterval_5 'A'
#define TC_IMPL_TC_DsLogAdmin_InvalidTimeInterval_6 'd'
#define TC_IMPL_TC_DsLogAdmin_InvalidTimeInterval_7 'm'
#define TC_IMPL_TC_DsLogAdmin_InvalidTimeInterval_8 'i'
#define TC_IMPL_TC_DsLogAdmin_InvalidTimeInterval_9 'n'
#ifdef ORBIT_IDL_C_IMODULE_DsLogAdmin
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_DsLogAdmin_InvalidTimeInterval_struct;
#define TC_DsLogAdmin_InvalidTimeInterval ((CORBA_TypeCode)&TC_DsLogAdmin_InvalidTimeInterval_struct)
#endif
#define DsLogAdmin_InvalidTimeInterval__alloc() ((DsLogAdmin_InvalidTimeInterval *)ORBit_small_alloc (TC_DsLogAdmin_InvalidTimeInterval))
#define DsLogAdmin_InvalidTimeInterval__freekids(m,d) ORBit_small_freekids (TC_DsLogAdmin_InvalidTimeInterval,(m),(d))
#endif
#undef ex_DsLogAdmin_InvalidMask
#define ex_DsLogAdmin_InvalidMask "IDL:omg.org/DsLogAdmin/InvalidMask:1.0"
#if !defined(_DsLogAdmin_InvalidMask_defined)
#define _DsLogAdmin_InvalidMask_defined 1
typedef struct DsLogAdmin_InvalidMask_type DsLogAdmin_InvalidMask;
struct DsLogAdmin_InvalidMask_type {
int dummy;
};

#if !defined(TC_IMPL_TC_DsLogAdmin_InvalidMask_0)
#define TC_IMPL_TC_DsLogAdmin_InvalidMask_0 'D'
#define TC_IMPL_TC_DsLogAdmin_InvalidMask_1 's'
#define TC_IMPL_TC_DsLogAdmin_InvalidMask_2 'L'
#define TC_IMPL_TC_DsLogAdmin_InvalidMask_3 'o'
#define TC_IMPL_TC_DsLogAdmin_InvalidMask_4 'g'
#define TC_IMPL_TC_DsLogAdmin_InvalidMask_5 'A'
#define TC_IMPL_TC_DsLogAdmin_InvalidMask_6 'd'
#define TC_IMPL_TC_DsLogAdmin_InvalidMask_7 'm'
#define TC_IMPL_TC_DsLogAdmin_InvalidMask_8 'i'
#define TC_IMPL_TC_DsLogAdmin_InvalidMask_9 'n'
#ifdef ORBIT_IDL_C_IMODULE_DsLogAdmin
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_DsLogAdmin_InvalidMask_struct;
#define TC_DsLogAdmin_InvalidMask ((CORBA_TypeCode)&TC_DsLogAdmin_InvalidMask_struct)
#endif
#define DsLogAdmin_InvalidMask__alloc() ((DsLogAdmin_InvalidMask *)ORBit_small_alloc (TC_DsLogAdmin_InvalidMask))
#define DsLogAdmin_InvalidMask__freekids(m,d) ORBit_small_freekids (TC_DsLogAdmin_InvalidMask,(m),(d))
#endif
#undef ex_DsLogAdmin_LogIdAlreadyExists
#define ex_DsLogAdmin_LogIdAlreadyExists "IDL:omg.org/DsLogAdmin/LogIdAlreadyExists:1.0"
#if !defined(_DsLogAdmin_LogIdAlreadyExists_defined)
#define _DsLogAdmin_LogIdAlreadyExists_defined 1
typedef struct DsLogAdmin_LogIdAlreadyExists_type DsLogAdmin_LogIdAlreadyExists;
struct DsLogAdmin_LogIdAlreadyExists_type {
int dummy;
};

#if !defined(TC_IMPL_TC_DsLogAdmin_LogIdAlreadyExists_0)
#define TC_IMPL_TC_DsLogAdmin_LogIdAlreadyExists_0 'D'
#define TC_IMPL_TC_DsLogAdmin_LogIdAlreadyExists_1 's'
#define TC_IMPL_TC_DsLogAdmin_LogIdAlreadyExists_2 'L'
#define TC_IMPL_TC_DsLogAdmin_LogIdAlreadyExists_3 'o'
#define TC_IMPL_TC_DsLogAdmin_LogIdAlreadyExists_4 'g'
#define TC_IMPL_TC_DsLogAdmin_LogIdAlreadyExists_5 'A'
#define TC_IMPL_TC_DsLogAdmin_LogIdAlreadyExists_6 'd'
#define TC_IMPL_TC_DsLogAdmin_LogIdAlreadyExists_7 'm'
#define TC_IMPL_TC_DsLogAdmin_LogIdAlreadyExists_8 'i'
#define TC_IMPL_TC_DsLogAdmin_LogIdAlreadyExists_9 'n'
#ifdef ORBIT_IDL_C_IMODULE_DsLogAdmin
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_DsLogAdmin_LogIdAlreadyExists_struct;
#define TC_DsLogAdmin_LogIdAlreadyExists ((CORBA_TypeCode)&TC_DsLogAdmin_LogIdAlreadyExists_struct)
#endif
#define DsLogAdmin_LogIdAlreadyExists__alloc() ((DsLogAdmin_LogIdAlreadyExists *)ORBit_small_alloc (TC_DsLogAdmin_LogIdAlreadyExists))
#define DsLogAdmin_LogIdAlreadyExists__freekids(m,d) ORBit_small_freekids (TC_DsLogAdmin_LogIdAlreadyExists,(m),(d))
#endif
#undef ex_DsLogAdmin_InvalidGrammar
#define ex_DsLogAdmin_InvalidGrammar "IDL:omg.org/DsLogAdmin/InvalidGrammar:1.0"
#if !defined(_DsLogAdmin_InvalidGrammar_defined)
#define _DsLogAdmin_InvalidGrammar_defined 1
typedef struct DsLogAdmin_InvalidGrammar_type DsLogAdmin_InvalidGrammar;
struct DsLogAdmin_InvalidGrammar_type {
int dummy;
};

#if !defined(TC_IMPL_TC_DsLogAdmin_InvalidGrammar_0)
#define TC_IMPL_TC_DsLogAdmin_InvalidGrammar_0 'D'
#define TC_IMPL_TC_DsLogAdmin_InvalidGrammar_1 's'
#define TC_IMPL_TC_DsLogAdmin_InvalidGrammar_2 'L'
#define TC_IMPL_TC_DsLogAdmin_InvalidGrammar_3 'o'
#define TC_IMPL_TC_DsLogAdmin_InvalidGrammar_4 'g'
#define TC_IMPL_TC_DsLogAdmin_InvalidGrammar_5 'A'
#define TC_IMPL_TC_DsLogAdmin_InvalidGrammar_6 'd'
#define TC_IMPL_TC_DsLogAdmin_InvalidGrammar_7 'm'
#define TC_IMPL_TC_DsLogAdmin_InvalidGrammar_8 'i'
#define TC_IMPL_TC_DsLogAdmin_InvalidGrammar_9 'n'
#ifdef ORBIT_IDL_C_IMODULE_DsLogAdmin
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_DsLogAdmin_InvalidGrammar_struct;
#define TC_DsLogAdmin_InvalidGrammar ((CORBA_TypeCode)&TC_DsLogAdmin_InvalidGrammar_struct)
#endif
#define DsLogAdmin_InvalidGrammar__alloc() ((DsLogAdmin_InvalidGrammar *)ORBit_small_alloc (TC_DsLogAdmin_InvalidGrammar))
#define DsLogAdmin_InvalidGrammar__freekids(m,d) ORBit_small_freekids (TC_DsLogAdmin_InvalidGrammar,(m),(d))
#endif
#undef ex_DsLogAdmin_InvalidConstraint
#define ex_DsLogAdmin_InvalidConstraint "IDL:omg.org/DsLogAdmin/InvalidConstraint:1.0"
#if !defined(_DsLogAdmin_InvalidConstraint_defined)
#define _DsLogAdmin_InvalidConstraint_defined 1
typedef struct DsLogAdmin_InvalidConstraint_type DsLogAdmin_InvalidConstraint;
struct DsLogAdmin_InvalidConstraint_type {
int dummy;
};

#if !defined(TC_IMPL_TC_DsLogAdmin_InvalidConstraint_0)
#define TC_IMPL_TC_DsLogAdmin_InvalidConstraint_0 'D'
#define TC_IMPL_TC_DsLogAdmin_InvalidConstraint_1 's'
#define TC_IMPL_TC_DsLogAdmin_InvalidConstraint_2 'L'
#define TC_IMPL_TC_DsLogAdmin_InvalidConstraint_3 'o'
#define TC_IMPL_TC_DsLogAdmin_InvalidConstraint_4 'g'
#define TC_IMPL_TC_DsLogAdmin_InvalidConstraint_5 'A'
#define TC_IMPL_TC_DsLogAdmin_InvalidConstraint_6 'd'
#define TC_IMPL_TC_DsLogAdmin_InvalidConstraint_7 'm'
#define TC_IMPL_TC_DsLogAdmin_InvalidConstraint_8 'i'
#define TC_IMPL_TC_DsLogAdmin_InvalidConstraint_9 'n'
#ifdef ORBIT_IDL_C_IMODULE_DsLogAdmin
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_DsLogAdmin_InvalidConstraint_struct;
#define TC_DsLogAdmin_InvalidConstraint ((CORBA_TypeCode)&TC_DsLogAdmin_InvalidConstraint_struct)
#endif
#define DsLogAdmin_InvalidConstraint__alloc() ((DsLogAdmin_InvalidConstraint *)ORBit_small_alloc (TC_DsLogAdmin_InvalidConstraint))
#define DsLogAdmin_InvalidConstraint__freekids(m,d) ORBit_small_freekids (TC_DsLogAdmin_InvalidConstraint,(m),(d))
#endif
#undef ex_DsLogAdmin_LogFull
#define ex_DsLogAdmin_LogFull "IDL:omg.org/DsLogAdmin/LogFull:1.0"
#if !defined(_DsLogAdmin_LogFull_defined)
#define _DsLogAdmin_LogFull_defined 1
typedef struct DsLogAdmin_LogFull_type DsLogAdmin_LogFull;
struct DsLogAdmin_LogFull_type {
CORBA_short n_records_written;
};

#if !defined(TC_IMPL_TC_DsLogAdmin_LogFull_0)
#define TC_IMPL_TC_DsLogAdmin_LogFull_0 'D'
#define TC_IMPL_TC_DsLogAdmin_LogFull_1 's'
#define TC_IMPL_TC_DsLogAdmin_LogFull_2 'L'
#define TC_IMPL_TC_DsLogAdmin_LogFull_3 'o'
#define TC_IMPL_TC_DsLogAdmin_LogFull_4 'g'
#define TC_IMPL_TC_DsLogAdmin_LogFull_5 'A'
#define TC_IMPL_TC_DsLogAdmin_LogFull_6 'd'
#define TC_IMPL_TC_DsLogAdmin_LogFull_7 'm'
#define TC_IMPL_TC_DsLogAdmin_LogFull_8 'i'
#define TC_IMPL_TC_DsLogAdmin_LogFull_9 'n'
#ifdef ORBIT_IDL_C_IMODULE_DsLogAdmin
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_DsLogAdmin_LogFull_struct;
#define TC_DsLogAdmin_LogFull ((CORBA_TypeCode)&TC_DsLogAdmin_LogFull_struct)
#endif
#define DsLogAdmin_LogFull__alloc() ((DsLogAdmin_LogFull *)ORBit_small_alloc (TC_DsLogAdmin_LogFull))
#define DsLogAdmin_LogFull__freekids(m,d) ORBit_small_freekids (TC_DsLogAdmin_LogFull,(m),(d))
#endif
#undef ex_DsLogAdmin_LogOffDuty
#define ex_DsLogAdmin_LogOffDuty "IDL:omg.org/DsLogAdmin/LogOffDuty:1.0"
#if !defined(_DsLogAdmin_LogOffDuty_defined)
#define _DsLogAdmin_LogOffDuty_defined 1
typedef struct DsLogAdmin_LogOffDuty_type DsLogAdmin_LogOffDuty;
struct DsLogAdmin_LogOffDuty_type {
int dummy;
};

#if !defined(TC_IMPL_TC_DsLogAdmin_LogOffDuty_0)
#define TC_IMPL_TC_DsLogAdmin_LogOffDuty_0 'D'
#define TC_IMPL_TC_DsLogAdmin_LogOffDuty_1 's'
#define TC_IMPL_TC_DsLogAdmin_LogOffDuty_2 'L'
#define TC_IMPL_TC_DsLogAdmin_LogOffDuty_3 'o'
#define TC_IMPL_TC_DsLogAdmin_LogOffDuty_4 'g'
#define TC_IMPL_TC_DsLogAdmin_LogOffDuty_5 'A'
#define TC_IMPL_TC_DsLogAdmin_LogOffDuty_6 'd'
#define TC_IMPL_TC_DsLogAdmin_LogOffDuty_7 'm'
#define TC_IMPL_TC_DsLogAdmin_LogOffDuty_8 'i'
#define TC_IMPL_TC_DsLogAdmin_LogOffDuty_9 'n'
#ifdef ORBIT_IDL_C_IMODULE_DsLogAdmin
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_DsLogAdmin_LogOffDuty_struct;
#define TC_DsLogAdmin_LogOffDuty ((CORBA_TypeCode)&TC_DsLogAdmin_LogOffDuty_struct)
#endif
#define DsLogAdmin_LogOffDuty__alloc() ((DsLogAdmin_LogOffDuty *)ORBit_small_alloc (TC_DsLogAdmin_LogOffDuty))
#define DsLogAdmin_LogOffDuty__freekids(m,d) ORBit_small_freekids (TC_DsLogAdmin_LogOffDuty,(m),(d))
#endif
#undef ex_DsLogAdmin_LogLocked
#define ex_DsLogAdmin_LogLocked "IDL:omg.org/DsLogAdmin/LogLocked:1.0"
#if !defined(_DsLogAdmin_LogLocked_defined)
#define _DsLogAdmin_LogLocked_defined 1
typedef struct DsLogAdmin_LogLocked_type DsLogAdmin_LogLocked;
struct DsLogAdmin_LogLocked_type {
int dummy;
};

#if !defined(TC_IMPL_TC_DsLogAdmin_LogLocked_0)
#define TC_IMPL_TC_DsLogAdmin_LogLocked_0 'D'
#define TC_IMPL_TC_DsLogAdmin_LogLocked_1 's'
#define TC_IMPL_TC_DsLogAdmin_LogLocked_2 'L'
#define TC_IMPL_TC_DsLogAdmin_LogLocked_3 'o'
#define TC_IMPL_TC_DsLogAdmin_LogLocked_4 'g'
#define TC_IMPL_TC_DsLogAdmin_LogLocked_5 'A'
#define TC_IMPL_TC_DsLogAdmin_LogLocked_6 'd'
#define TC_IMPL_TC_DsLogAdmin_LogLocked_7 'm'
#define TC_IMPL_TC_DsLogAdmin_LogLocked_8 'i'
#define TC_IMPL_TC_DsLogAdmin_LogLocked_9 'n'
#ifdef ORBIT_IDL_C_IMODULE_DsLogAdmin
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_DsLogAdmin_LogLocked_struct;
#define TC_DsLogAdmin_LogLocked ((CORBA_TypeCode)&TC_DsLogAdmin_LogLocked_struct)
#endif
#define DsLogAdmin_LogLocked__alloc() ((DsLogAdmin_LogLocked *)ORBit_small_alloc (TC_DsLogAdmin_LogLocked))
#define DsLogAdmin_LogLocked__freekids(m,d) ORBit_small_freekids (TC_DsLogAdmin_LogLocked,(m),(d))
#endif
#undef ex_DsLogAdmin_LogDisabled
#define ex_DsLogAdmin_LogDisabled "IDL:omg.org/DsLogAdmin/LogDisabled:1.0"
#if !defined(_DsLogAdmin_LogDisabled_defined)
#define _DsLogAdmin_LogDisabled_defined 1
typedef struct DsLogAdmin_LogDisabled_type DsLogAdmin_LogDisabled;
struct DsLogAdmin_LogDisabled_type {
int dummy;
};

#if !defined(TC_IMPL_TC_DsLogAdmin_LogDisabled_0)
#define TC_IMPL_TC_DsLogAdmin_LogDisabled_0 'D'
#define TC_IMPL_TC_DsLogAdmin_LogDisabled_1 's'
#define TC_IMPL_TC_DsLogAdmin_LogDisabled_2 'L'
#define TC_IMPL_TC_DsLogAdmin_LogDisabled_3 'o'
#define TC_IMPL_TC_DsLogAdmin_LogDisabled_4 'g'
#define TC_IMPL_TC_DsLogAdmin_LogDisabled_5 'A'
#define TC_IMPL_TC_DsLogAdmin_LogDisabled_6 'd'
#define TC_IMPL_TC_DsLogAdmin_LogDisabled_7 'm'
#define TC_IMPL_TC_DsLogAdmin_LogDisabled_8 'i'
#define TC_IMPL_TC_DsLogAdmin_LogDisabled_9 'n'
#ifdef ORBIT_IDL_C_IMODULE_DsLogAdmin
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_DsLogAdmin_LogDisabled_struct;
#define TC_DsLogAdmin_LogDisabled ((CORBA_TypeCode)&TC_DsLogAdmin_LogDisabled_struct)
#endif
#define DsLogAdmin_LogDisabled__alloc() ((DsLogAdmin_LogDisabled *)ORBit_small_alloc (TC_DsLogAdmin_LogDisabled))
#define DsLogAdmin_LogDisabled__freekids(m,d) ORBit_small_freekids (TC_DsLogAdmin_LogDisabled,(m),(d))
#endif
#undef ex_DsLogAdmin_InvalidRecordId
#define ex_DsLogAdmin_InvalidRecordId "IDL:omg.org/DsLogAdmin/InvalidRecordId:1.0"
#if !defined(_DsLogAdmin_InvalidRecordId_defined)
#define _DsLogAdmin_InvalidRecordId_defined 1
typedef struct DsLogAdmin_InvalidRecordId_type DsLogAdmin_InvalidRecordId;
struct DsLogAdmin_InvalidRecordId_type {
int dummy;
};

#if !defined(TC_IMPL_TC_DsLogAdmin_InvalidRecordId_0)
#define TC_IMPL_TC_DsLogAdmin_InvalidRecordId_0 'D'
#define TC_IMPL_TC_DsLogAdmin_InvalidRecordId_1 's'
#define TC_IMPL_TC_DsLogAdmin_InvalidRecordId_2 'L'
#define TC_IMPL_TC_DsLogAdmin_InvalidRecordId_3 'o'
#define TC_IMPL_TC_DsLogAdmin_InvalidRecordId_4 'g'
#define TC_IMPL_TC_DsLogAdmin_InvalidRecordId_5 'A'
#define TC_IMPL_TC_DsLogAdmin_InvalidRecordId_6 'd'
#define TC_IMPL_TC_DsLogAdmin_InvalidRecordId_7 'm'
#define TC_IMPL_TC_DsLogAdmin_InvalidRecordId_8 'i'
#define TC_IMPL_TC_DsLogAdmin_InvalidRecordId_9 'n'
#ifdef ORBIT_IDL_C_IMODULE_DsLogAdmin
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_DsLogAdmin_InvalidRecordId_struct;
#define TC_DsLogAdmin_InvalidRecordId ((CORBA_TypeCode)&TC_DsLogAdmin_InvalidRecordId_struct)
#endif
#define DsLogAdmin_InvalidRecordId__alloc() ((DsLogAdmin_InvalidRecordId *)ORBit_small_alloc (TC_DsLogAdmin_InvalidRecordId))
#define DsLogAdmin_InvalidRecordId__freekids(m,d) ORBit_small_freekids (TC_DsLogAdmin_InvalidRecordId,(m),(d))
#endif
#undef ex_DsLogAdmin_InvalidAttribute
#define ex_DsLogAdmin_InvalidAttribute "IDL:omg.org/DsLogAdmin/InvalidAttribute:1.0"
#if !defined(_DsLogAdmin_InvalidAttribute_defined)
#define _DsLogAdmin_InvalidAttribute_defined 1
typedef struct DsLogAdmin_InvalidAttribute_type DsLogAdmin_InvalidAttribute;
struct DsLogAdmin_InvalidAttribute_type {
CORBA_string attr_name;
CORBA_any value;
};

#if !defined(TC_IMPL_TC_DsLogAdmin_InvalidAttribute_0)
#define TC_IMPL_TC_DsLogAdmin_InvalidAttribute_0 'D'
#define TC_IMPL_TC_DsLogAdmin_InvalidAttribute_1 's'
#define TC_IMPL_TC_DsLogAdmin_InvalidAttribute_2 'L'
#define TC_IMPL_TC_DsLogAdmin_InvalidAttribute_3 'o'
#define TC_IMPL_TC_DsLogAdmin_InvalidAttribute_4 'g'
#define TC_IMPL_TC_DsLogAdmin_InvalidAttribute_5 'A'
#define TC_IMPL_TC_DsLogAdmin_InvalidAttribute_6 'd'
#define TC_IMPL_TC_DsLogAdmin_InvalidAttribute_7 'm'
#define TC_IMPL_TC_DsLogAdmin_InvalidAttribute_8 'i'
#define TC_IMPL_TC_DsLogAdmin_InvalidAttribute_9 'n'
#ifdef ORBIT_IDL_C_IMODULE_DsLogAdmin
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_DsLogAdmin_InvalidAttribute_struct;
#define TC_DsLogAdmin_InvalidAttribute ((CORBA_TypeCode)&TC_DsLogAdmin_InvalidAttribute_struct)
#endif
#define DsLogAdmin_InvalidAttribute__alloc() ((DsLogAdmin_InvalidAttribute *)ORBit_small_alloc (TC_DsLogAdmin_InvalidAttribute))
#define DsLogAdmin_InvalidAttribute__freekids(m,d) ORBit_small_freekids (TC_DsLogAdmin_InvalidAttribute,(m),(d))
#endif
#undef ex_DsLogAdmin_InvalidLogFullAction
#define ex_DsLogAdmin_InvalidLogFullAction "IDL:omg.org/DsLogAdmin/InvalidLogFullAction:1.0"
#if !defined(_DsLogAdmin_InvalidLogFullAction_defined)
#define _DsLogAdmin_InvalidLogFullAction_defined 1
typedef struct DsLogAdmin_InvalidLogFullAction_type DsLogAdmin_InvalidLogFullAction;
struct DsLogAdmin_InvalidLogFullAction_type {
int dummy;
};

#if !defined(TC_IMPL_TC_DsLogAdmin_InvalidLogFullAction_0)
#define TC_IMPL_TC_DsLogAdmin_InvalidLogFullAction_0 'D'
#define TC_IMPL_TC_DsLogAdmin_InvalidLogFullAction_1 's'
#define TC_IMPL_TC_DsLogAdmin_InvalidLogFullAction_2 'L'
#define TC_IMPL_TC_DsLogAdmin_InvalidLogFullAction_3 'o'
#define TC_IMPL_TC_DsLogAdmin_InvalidLogFullAction_4 'g'
#define TC_IMPL_TC_DsLogAdmin_InvalidLogFullAction_5 'A'
#define TC_IMPL_TC_DsLogAdmin_InvalidLogFullAction_6 'd'
#define TC_IMPL_TC_DsLogAdmin_InvalidLogFullAction_7 'm'
#define TC_IMPL_TC_DsLogAdmin_InvalidLogFullAction_8 'i'
#define TC_IMPL_TC_DsLogAdmin_InvalidLogFullAction_9 'n'
#ifdef ORBIT_IDL_C_IMODULE_DsLogAdmin
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_DsLogAdmin_InvalidLogFullAction_struct;
#define TC_DsLogAdmin_InvalidLogFullAction ((CORBA_TypeCode)&TC_DsLogAdmin_InvalidLogFullAction_struct)
#endif
#define DsLogAdmin_InvalidLogFullAction__alloc() ((DsLogAdmin_InvalidLogFullAction *)ORBit_small_alloc (TC_DsLogAdmin_InvalidLogFullAction))
#define DsLogAdmin_InvalidLogFullAction__freekids(m,d) ORBit_small_freekids (TC_DsLogAdmin_InvalidLogFullAction,(m),(d))
#endif
#if !defined(_DsLogAdmin_LogId_defined)
#define _DsLogAdmin_LogId_defined 1
typedef CORBA_unsigned_long DsLogAdmin_LogId;
#define DsLogAdmin_LogId_marshal(x,y,z) CORBA_unsigned_long_marshal((x),(y),(z))
#define DsLogAdmin_LogId_demarshal(x,y,z,i) CORBA_unsigned_long_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_DsLogAdmin_LogId_0)
#define TC_IMPL_TC_DsLogAdmin_LogId_0 'D'
#define TC_IMPL_TC_DsLogAdmin_LogId_1 's'
#define TC_IMPL_TC_DsLogAdmin_LogId_2 'L'
#define TC_IMPL_TC_DsLogAdmin_LogId_3 'o'
#define TC_IMPL_TC_DsLogAdmin_LogId_4 'g'
#define TC_IMPL_TC_DsLogAdmin_LogId_5 'A'
#define TC_IMPL_TC_DsLogAdmin_LogId_6 'd'
#define TC_IMPL_TC_DsLogAdmin_LogId_7 'm'
#define TC_IMPL_TC_DsLogAdmin_LogId_8 'i'
#define TC_IMPL_TC_DsLogAdmin_LogId_9 'n'
#ifdef ORBIT_IDL_C_IMODULE_DsLogAdmin
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_DsLogAdmin_LogId_struct;
#define TC_DsLogAdmin_LogId ((CORBA_TypeCode)&TC_DsLogAdmin_LogId_struct)
#endif
#define DsLogAdmin_LogId__alloc() ((DsLogAdmin_LogId *)ORBit_small_alloc (TC_CORBA_unsigned_long))
#define DsLogAdmin_LogId__freekids(m,d) ORBit_small_freekids (TC_CORBA_unsigned_long,(m),(d))
#endif
#if !defined(_DsLogAdmin_RecordId_defined)
#define _DsLogAdmin_RecordId_defined 1
typedef CORBA_unsigned_long_long DsLogAdmin_RecordId;
#define DsLogAdmin_RecordId_marshal(x,y,z) CORBA_unsigned_long_long_marshal((x),(y),(z))
#define DsLogAdmin_RecordId_demarshal(x,y,z,i) CORBA_unsigned_long_long_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_DsLogAdmin_RecordId_0)
#define TC_IMPL_TC_DsLogAdmin_RecordId_0 'D'
#define TC_IMPL_TC_DsLogAdmin_RecordId_1 's'
#define TC_IMPL_TC_DsLogAdmin_RecordId_2 'L'
#define TC_IMPL_TC_DsLogAdmin_RecordId_3 'o'
#define TC_IMPL_TC_DsLogAdmin_RecordId_4 'g'
#define TC_IMPL_TC_DsLogAdmin_RecordId_5 'A'
#define TC_IMPL_TC_DsLogAdmin_RecordId_6 'd'
#define TC_IMPL_TC_DsLogAdmin_RecordId_7 'm'
#define TC_IMPL_TC_DsLogAdmin_RecordId_8 'i'
#define TC_IMPL_TC_DsLogAdmin_RecordId_9 'n'
#ifdef ORBIT_IDL_C_IMODULE_DsLogAdmin
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_DsLogAdmin_RecordId_struct;
#define TC_DsLogAdmin_RecordId ((CORBA_TypeCode)&TC_DsLogAdmin_RecordId_struct)
#endif
#define DsLogAdmin_RecordId__alloc() ((DsLogAdmin_RecordId *)ORBit_small_alloc (TC_CORBA_unsigned_long_long))
#define DsLogAdmin_RecordId__freekids(m,d) ORBit_small_freekids (TC_CORBA_unsigned_long_long,(m),(d))
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_CORBA_unsigned_long_long)
#define ORBIT_DECL_CORBA_sequence_CORBA_unsigned_long_long 1
#define ORBIT_IMPL_CORBA_sequence_CORBA_unsigned_long_long_0 'D'
#define ORBIT_IMPL_CORBA_sequence_CORBA_unsigned_long_long_1 's'
#define ORBIT_IMPL_CORBA_sequence_CORBA_unsigned_long_long_2 'L'
#define ORBIT_IMPL_CORBA_sequence_CORBA_unsigned_long_long_3 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_unsigned_long_long_4 'g'
#define ORBIT_IMPL_CORBA_sequence_CORBA_unsigned_long_long_5 'A'
#define ORBIT_IMPL_CORBA_sequence_CORBA_unsigned_long_long_6 'd'
#define ORBIT_IMPL_CORBA_sequence_CORBA_unsigned_long_long_7 'm'
#define ORBIT_IMPL_CORBA_sequence_CORBA_unsigned_long_long_8 'i'
#define ORBIT_IMPL_CORBA_sequence_CORBA_unsigned_long_long_9 'n'
#if !defined(_CORBA_sequence_CORBA_unsigned_long_long_defined)
#define _CORBA_sequence_CORBA_unsigned_long_long_defined 1
typedef struct { CORBA_unsigned_long _maximum, _length; CORBA_unsigned_long_long* _buffer; CORBA_boolean _release; } CORBA_sequence_CORBA_unsigned_long_long;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_CORBA_unsigned_long_long_0)
#define TC_IMPL_TC_CORBA_sequence_CORBA_unsigned_long_long_0 'D'
#define TC_IMPL_TC_CORBA_sequence_CORBA_unsigned_long_long_1 's'
#define TC_IMPL_TC_CORBA_sequence_CORBA_unsigned_long_long_2 'L'
#define TC_IMPL_TC_CORBA_sequence_CORBA_unsigned_long_long_3 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_unsigned_long_long_4 'g'
#define TC_IMPL_TC_CORBA_sequence_CORBA_unsigned_long_long_5 'A'
#define TC_IMPL_TC_CORBA_sequence_CORBA_unsigned_long_long_6 'd'
#define TC_IMPL_TC_CORBA_sequence_CORBA_unsigned_long_long_7 'm'
#define TC_IMPL_TC_CORBA_sequence_CORBA_unsigned_long_long_8 'i'
#define TC_IMPL_TC_CORBA_sequence_CORBA_unsigned_long_long_9 'n'
#ifdef ORBIT_IDL_C_IMODULE_DsLogAdmin
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_CORBA_sequence_CORBA_unsigned_long_long_struct;
#define TC_CORBA_sequence_CORBA_unsigned_long_long ((CORBA_TypeCode)&TC_CORBA_sequence_CORBA_unsigned_long_long_struct)
#endif
#define CORBA_sequence_CORBA_unsigned_long_long__alloc() ((CORBA_sequence_CORBA_unsigned_long_long *)ORBit_small_alloc (TC_CORBA_sequence_CORBA_unsigned_long_long))
#define CORBA_sequence_CORBA_unsigned_long_long__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_CORBA_unsigned_long_long,(m),(d))
#define CORBA_sequence_CORBA_unsigned_long_long_allocbuf(l) ((CORBA_unsigned_long_long*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_unsigned_long_long, (l)))
#define CORBA_sequence_CORBA_unsigned_long_long_allocbuf(l) ((CORBA_unsigned_long_long*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_unsigned_long_long, (l)))
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_DsLogAdmin_RecordId)
#define ORBIT_DECL_CORBA_sequence_DsLogAdmin_RecordId 1
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_RecordId_0 'D'
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_RecordId_1 's'
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_RecordId_2 'L'
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_RecordId_3 'o'
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_RecordId_4 'g'
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_RecordId_5 'A'
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_RecordId_6 'd'
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_RecordId_7 'm'
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_RecordId_8 'i'
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_RecordId_9 'n'
#if !defined(_CORBA_sequence_DsLogAdmin_RecordId_defined)
#define _CORBA_sequence_DsLogAdmin_RecordId_defined 1
typedef CORBA_sequence_CORBA_unsigned_long_long CORBA_sequence_DsLogAdmin_RecordId;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_DsLogAdmin_RecordId_0)
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_RecordId_0 'D'
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_RecordId_1 's'
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_RecordId_2 'L'
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_RecordId_3 'o'
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_RecordId_4 'g'
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_RecordId_5 'A'
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_RecordId_6 'd'
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_RecordId_7 'm'
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_RecordId_8 'i'
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_RecordId_9 'n'
#ifdef ORBIT_IDL_C_IMODULE_DsLogAdmin
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_CORBA_sequence_DsLogAdmin_RecordId_struct;
#define TC_CORBA_sequence_DsLogAdmin_RecordId ((CORBA_TypeCode)&TC_CORBA_sequence_DsLogAdmin_RecordId_struct)
#endif
#define CORBA_sequence_DsLogAdmin_RecordId__alloc CORBA_sequence_CORBA_unsigned_long_long__alloc
#define CORBA_sequence_DsLogAdmin_RecordId__freekids CORBA_sequence_CORBA_unsigned_long_long__freekids
#define CORBA_sequence_DsLogAdmin_RecordId_allocbuf CORBA_sequence_CORBA_unsigned_long_long_allocbuf
#define CORBA_sequence_DsLogAdmin_RecordId_marshal(x,y,z) CORBA_sequence_CORBA_unsigned_long_long_marshal((x),(y),(z))
#define CORBA_sequence_DsLogAdmin_RecordId_demarshal(x,y,z,i) CORBA_sequence_CORBA_unsigned_long_long_demarshal((x),(y),(z),(i))
#endif
#if !defined(_DsLogAdmin_RecordIdList_defined)
#define _DsLogAdmin_RecordIdList_defined 1
typedef CORBA_sequence_DsLogAdmin_RecordId DsLogAdmin_RecordIdList;
#define DsLogAdmin_RecordIdList_marshal(x,y,z) CORBA_sequence_DsLogAdmin_RecordId_marshal((x),(y),(z))
#define DsLogAdmin_RecordIdList_demarshal(x,y,z,i) CORBA_sequence_DsLogAdmin_RecordId_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_DsLogAdmin_RecordIdList_0)
#define TC_IMPL_TC_DsLogAdmin_RecordIdList_0 'D'
#define TC_IMPL_TC_DsLogAdmin_RecordIdList_1 's'
#define TC_IMPL_TC_DsLogAdmin_RecordIdList_2 'L'
#define TC_IMPL_TC_DsLogAdmin_RecordIdList_3 'o'
#define TC_IMPL_TC_DsLogAdmin_RecordIdList_4 'g'
#define TC_IMPL_TC_DsLogAdmin_RecordIdList_5 'A'
#define TC_IMPL_TC_DsLogAdmin_RecordIdList_6 'd'
#define TC_IMPL_TC_DsLogAdmin_RecordIdList_7 'm'
#define TC_IMPL_TC_DsLogAdmin_RecordIdList_8 'i'
#define TC_IMPL_TC_DsLogAdmin_RecordIdList_9 'n'
#ifdef ORBIT_IDL_C_IMODULE_DsLogAdmin
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_DsLogAdmin_RecordIdList_struct;
#define TC_DsLogAdmin_RecordIdList ((CORBA_TypeCode)&TC_DsLogAdmin_RecordIdList_struct)
#endif
#define DsLogAdmin_RecordIdList__alloc() ((DsLogAdmin_RecordIdList *)ORBit_small_alloc (TC_CORBA_sequence_DsLogAdmin_RecordId))
#define DsLogAdmin_RecordIdList__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_DsLogAdmin_RecordId,(m),(d))
#define DsLogAdmin_RecordIdList_allocbuf(l) ((DsLogAdmin_RecordId*)ORBit_small_allocbuf (TC_CORBA_sequence_DsLogAdmin_RecordId, (l)))
#endif
#ifndef DsLogAdmin_default_grammar
#define DsLogAdmin_default_grammar "EXTENDED_TCL"
#endif /* !DsLogAdmin_default_grammar */

#if !defined(_DsLogAdmin_Constraint_defined)
#define _DsLogAdmin_Constraint_defined 1
typedef CORBA_string DsLogAdmin_Constraint;
#define DsLogAdmin_Constraint_marshal(x,y,z) CORBA_string_marshal((x),(y),(z))
#define DsLogAdmin_Constraint_demarshal(x,y,z,i) CORBA_string_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_DsLogAdmin_Constraint_0)
#define TC_IMPL_TC_DsLogAdmin_Constraint_0 'D'
#define TC_IMPL_TC_DsLogAdmin_Constraint_1 's'
#define TC_IMPL_TC_DsLogAdmin_Constraint_2 'L'
#define TC_IMPL_TC_DsLogAdmin_Constraint_3 'o'
#define TC_IMPL_TC_DsLogAdmin_Constraint_4 'g'
#define TC_IMPL_TC_DsLogAdmin_Constraint_5 'A'
#define TC_IMPL_TC_DsLogAdmin_Constraint_6 'd'
#define TC_IMPL_TC_DsLogAdmin_Constraint_7 'm'
#define TC_IMPL_TC_DsLogAdmin_Constraint_8 'i'
#define TC_IMPL_TC_DsLogAdmin_Constraint_9 'n'
#ifdef ORBIT_IDL_C_IMODULE_DsLogAdmin
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_DsLogAdmin_Constraint_struct;
#define TC_DsLogAdmin_Constraint ((CORBA_TypeCode)&TC_DsLogAdmin_Constraint_struct)
#endif
#define DsLogAdmin_Constraint__alloc() ((DsLogAdmin_Constraint *)ORBit_small_alloc (TC_CORBA_string))
#define DsLogAdmin_Constraint__freekids(m,d) ORBit_small_freekids (TC_CORBA_string,(m),(d))
#endif
#if !defined(_DsLogAdmin_TimeT_defined)
#define _DsLogAdmin_TimeT_defined 1
typedef TimeBase_TimeT DsLogAdmin_TimeT;
#define DsLogAdmin_TimeT_marshal(x,y,z) TimeBase_TimeT_marshal((x),(y),(z))
#define DsLogAdmin_TimeT_demarshal(x,y,z,i) TimeBase_TimeT_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_DsLogAdmin_TimeT_0)
#define TC_IMPL_TC_DsLogAdmin_TimeT_0 'D'
#define TC_IMPL_TC_DsLogAdmin_TimeT_1 's'
#define TC_IMPL_TC_DsLogAdmin_TimeT_2 'L'
#define TC_IMPL_TC_DsLogAdmin_TimeT_3 'o'
#define TC_IMPL_TC_DsLogAdmin_TimeT_4 'g'
#define TC_IMPL_TC_DsLogAdmin_TimeT_5 'A'
#define TC_IMPL_TC_DsLogAdmin_TimeT_6 'd'
#define TC_IMPL_TC_DsLogAdmin_TimeT_7 'm'
#define TC_IMPL_TC_DsLogAdmin_TimeT_8 'i'
#define TC_IMPL_TC_DsLogAdmin_TimeT_9 'n'
#ifdef ORBIT_IDL_C_IMODULE_DsLogAdmin
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_DsLogAdmin_TimeT_struct;
#define TC_DsLogAdmin_TimeT ((CORBA_TypeCode)&TC_DsLogAdmin_TimeT_struct)
#endif
#define DsLogAdmin_TimeT__alloc() ((DsLogAdmin_TimeT *)ORBit_small_alloc (TC_CORBA_unsigned_long_long))
#define DsLogAdmin_TimeT__freekids(m,d) ORBit_small_freekids (TC_CORBA_unsigned_long_long,(m),(d))
#endif
#if !defined(_DsLogAdmin_NVPair_defined)
#define _DsLogAdmin_NVPair_defined 1
typedef struct DsLogAdmin_NVPair_type DsLogAdmin_NVPair;
struct DsLogAdmin_NVPair_type {
CORBA_string name;
CORBA_any value;
};

#if !defined(TC_IMPL_TC_DsLogAdmin_NVPair_0)
#define TC_IMPL_TC_DsLogAdmin_NVPair_0 'D'
#define TC_IMPL_TC_DsLogAdmin_NVPair_1 's'
#define TC_IMPL_TC_DsLogAdmin_NVPair_2 'L'
#define TC_IMPL_TC_DsLogAdmin_NVPair_3 'o'
#define TC_IMPL_TC_DsLogAdmin_NVPair_4 'g'
#define TC_IMPL_TC_DsLogAdmin_NVPair_5 'A'
#define TC_IMPL_TC_DsLogAdmin_NVPair_6 'd'
#define TC_IMPL_TC_DsLogAdmin_NVPair_7 'm'
#define TC_IMPL_TC_DsLogAdmin_NVPair_8 'i'
#define TC_IMPL_TC_DsLogAdmin_NVPair_9 'n'
#ifdef ORBIT_IDL_C_IMODULE_DsLogAdmin
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_DsLogAdmin_NVPair_struct;
#define TC_DsLogAdmin_NVPair ((CORBA_TypeCode)&TC_DsLogAdmin_NVPair_struct)
#endif
#define DsLogAdmin_NVPair__alloc() ((DsLogAdmin_NVPair *)ORBit_small_alloc (TC_DsLogAdmin_NVPair))
#define DsLogAdmin_NVPair__freekids(m,d) ORBit_small_freekids (TC_DsLogAdmin_NVPair,(m),(d))
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_DsLogAdmin_NVPair)
#define ORBIT_DECL_CORBA_sequence_DsLogAdmin_NVPair 1
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_NVPair_0 'D'
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_NVPair_1 's'
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_NVPair_2 'L'
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_NVPair_3 'o'
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_NVPair_4 'g'
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_NVPair_5 'A'
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_NVPair_6 'd'
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_NVPair_7 'm'
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_NVPair_8 'i'
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_NVPair_9 'n'
#if !defined(_CORBA_sequence_DsLogAdmin_NVPair_defined)
#define _CORBA_sequence_DsLogAdmin_NVPair_defined 1
typedef struct { CORBA_unsigned_long _maximum, _length; DsLogAdmin_NVPair* _buffer; CORBA_boolean _release; } CORBA_sequence_DsLogAdmin_NVPair;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_DsLogAdmin_NVPair_0)
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_NVPair_0 'D'
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_NVPair_1 's'
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_NVPair_2 'L'
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_NVPair_3 'o'
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_NVPair_4 'g'
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_NVPair_5 'A'
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_NVPair_6 'd'
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_NVPair_7 'm'
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_NVPair_8 'i'
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_NVPair_9 'n'
#ifdef ORBIT_IDL_C_IMODULE_DsLogAdmin
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_CORBA_sequence_DsLogAdmin_NVPair_struct;
#define TC_CORBA_sequence_DsLogAdmin_NVPair ((CORBA_TypeCode)&TC_CORBA_sequence_DsLogAdmin_NVPair_struct)
#endif
#define CORBA_sequence_DsLogAdmin_NVPair__alloc() ((CORBA_sequence_DsLogAdmin_NVPair *)ORBit_small_alloc (TC_CORBA_sequence_DsLogAdmin_NVPair))
#define CORBA_sequence_DsLogAdmin_NVPair__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_DsLogAdmin_NVPair,(m),(d))
#define CORBA_sequence_DsLogAdmin_NVPair_allocbuf(l) ((DsLogAdmin_NVPair*)ORBit_small_allocbuf (TC_CORBA_sequence_DsLogAdmin_NVPair, (l)))
#define CORBA_sequence_DsLogAdmin_NVPair_allocbuf(l) ((DsLogAdmin_NVPair*)ORBit_small_allocbuf (TC_CORBA_sequence_DsLogAdmin_NVPair, (l)))
#endif
#if !defined(_DsLogAdmin_NVList_defined)
#define _DsLogAdmin_NVList_defined 1
typedef CORBA_sequence_DsLogAdmin_NVPair DsLogAdmin_NVList;
#define DsLogAdmin_NVList_marshal(x,y,z) CORBA_sequence_DsLogAdmin_NVPair_marshal((x),(y),(z))
#define DsLogAdmin_NVList_demarshal(x,y,z,i) CORBA_sequence_DsLogAdmin_NVPair_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_DsLogAdmin_NVList_0)
#define TC_IMPL_TC_DsLogAdmin_NVList_0 'D'
#define TC_IMPL_TC_DsLogAdmin_NVList_1 's'
#define TC_IMPL_TC_DsLogAdmin_NVList_2 'L'
#define TC_IMPL_TC_DsLogAdmin_NVList_3 'o'
#define TC_IMPL_TC_DsLogAdmin_NVList_4 'g'
#define TC_IMPL_TC_DsLogAdmin_NVList_5 'A'
#define TC_IMPL_TC_DsLogAdmin_NVList_6 'd'
#define TC_IMPL_TC_DsLogAdmin_NVList_7 'm'
#define TC_IMPL_TC_DsLogAdmin_NVList_8 'i'
#define TC_IMPL_TC_DsLogAdmin_NVList_9 'n'
#ifdef ORBIT_IDL_C_IMODULE_DsLogAdmin
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_DsLogAdmin_NVList_struct;
#define TC_DsLogAdmin_NVList ((CORBA_TypeCode)&TC_DsLogAdmin_NVList_struct)
#endif
#define DsLogAdmin_NVList__alloc() ((DsLogAdmin_NVList *)ORBit_small_alloc (TC_CORBA_sequence_DsLogAdmin_NVPair))
#define DsLogAdmin_NVList__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_DsLogAdmin_NVPair,(m),(d))
#define DsLogAdmin_NVList_allocbuf(l) ((DsLogAdmin_NVPair*)ORBit_small_allocbuf (TC_CORBA_sequence_DsLogAdmin_NVPair, (l)))
#endif
#if !defined(_DsLogAdmin_TimeInterval_defined)
#define _DsLogAdmin_TimeInterval_defined 1
typedef struct DsLogAdmin_TimeInterval_type DsLogAdmin_TimeInterval;
struct DsLogAdmin_TimeInterval_type {
DsLogAdmin_TimeT start;
DsLogAdmin_TimeT stop;
};

#if !defined(TC_IMPL_TC_DsLogAdmin_TimeInterval_0)
#define TC_IMPL_TC_DsLogAdmin_TimeInterval_0 'D'
#define TC_IMPL_TC_DsLogAdmin_TimeInterval_1 's'
#define TC_IMPL_TC_DsLogAdmin_TimeInterval_2 'L'
#define TC_IMPL_TC_DsLogAdmin_TimeInterval_3 'o'
#define TC_IMPL_TC_DsLogAdmin_TimeInterval_4 'g'
#define TC_IMPL_TC_DsLogAdmin_TimeInterval_5 'A'
#define TC_IMPL_TC_DsLogAdmin_TimeInterval_6 'd'
#define TC_IMPL_TC_DsLogAdmin_TimeInterval_7 'm'
#define TC_IMPL_TC_DsLogAdmin_TimeInterval_8 'i'
#define TC_IMPL_TC_DsLogAdmin_TimeInterval_9 'n'
#ifdef ORBIT_IDL_C_IMODULE_DsLogAdmin
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_DsLogAdmin_TimeInterval_struct;
#define TC_DsLogAdmin_TimeInterval ((CORBA_TypeCode)&TC_DsLogAdmin_TimeInterval_struct)
#endif
#define DsLogAdmin_TimeInterval__alloc() ((DsLogAdmin_TimeInterval *)ORBit_small_alloc (TC_DsLogAdmin_TimeInterval))
#define DsLogAdmin_TimeInterval__freekids(m,d) ORBit_small_freekids (TC_DsLogAdmin_TimeInterval,(m),(d))
#endif
#if !defined(_DsLogAdmin_LogRecord_defined)
#define _DsLogAdmin_LogRecord_defined 1
typedef struct DsLogAdmin_LogRecord_type DsLogAdmin_LogRecord;
struct DsLogAdmin_LogRecord_type {
DsLogAdmin_RecordId id;
DsLogAdmin_TimeT time;
DsLogAdmin_NVList attr_list;
CORBA_any info;
};

#if !defined(TC_IMPL_TC_DsLogAdmin_LogRecord_0)
#define TC_IMPL_TC_DsLogAdmin_LogRecord_0 'D'
#define TC_IMPL_TC_DsLogAdmin_LogRecord_1 's'
#define TC_IMPL_TC_DsLogAdmin_LogRecord_2 'L'
#define TC_IMPL_TC_DsLogAdmin_LogRecord_3 'o'
#define TC_IMPL_TC_DsLogAdmin_LogRecord_4 'g'
#define TC_IMPL_TC_DsLogAdmin_LogRecord_5 'A'
#define TC_IMPL_TC_DsLogAdmin_LogRecord_6 'd'
#define TC_IMPL_TC_DsLogAdmin_LogRecord_7 'm'
#define TC_IMPL_TC_DsLogAdmin_LogRecord_8 'i'
#define TC_IMPL_TC_DsLogAdmin_LogRecord_9 'n'
#ifdef ORBIT_IDL_C_IMODULE_DsLogAdmin
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_DsLogAdmin_LogRecord_struct;
#define TC_DsLogAdmin_LogRecord ((CORBA_TypeCode)&TC_DsLogAdmin_LogRecord_struct)
#endif
#define DsLogAdmin_LogRecord__alloc() ((DsLogAdmin_LogRecord *)ORBit_small_alloc (TC_DsLogAdmin_LogRecord))
#define DsLogAdmin_LogRecord__freekids(m,d) ORBit_small_freekids (TC_DsLogAdmin_LogRecord,(m),(d))
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_DsLogAdmin_LogRecord)
#define ORBIT_DECL_CORBA_sequence_DsLogAdmin_LogRecord 1
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_LogRecord_0 'D'
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_LogRecord_1 's'
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_LogRecord_2 'L'
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_LogRecord_3 'o'
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_LogRecord_4 'g'
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_LogRecord_5 'A'
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_LogRecord_6 'd'
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_LogRecord_7 'm'
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_LogRecord_8 'i'
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_LogRecord_9 'n'
#if !defined(_CORBA_sequence_DsLogAdmin_LogRecord_defined)
#define _CORBA_sequence_DsLogAdmin_LogRecord_defined 1
typedef struct { CORBA_unsigned_long _maximum, _length; DsLogAdmin_LogRecord* _buffer; CORBA_boolean _release; } CORBA_sequence_DsLogAdmin_LogRecord;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_DsLogAdmin_LogRecord_0)
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_LogRecord_0 'D'
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_LogRecord_1 's'
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_LogRecord_2 'L'
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_LogRecord_3 'o'
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_LogRecord_4 'g'
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_LogRecord_5 'A'
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_LogRecord_6 'd'
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_LogRecord_7 'm'
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_LogRecord_8 'i'
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_LogRecord_9 'n'
#ifdef ORBIT_IDL_C_IMODULE_DsLogAdmin
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_CORBA_sequence_DsLogAdmin_LogRecord_struct;
#define TC_CORBA_sequence_DsLogAdmin_LogRecord ((CORBA_TypeCode)&TC_CORBA_sequence_DsLogAdmin_LogRecord_struct)
#endif
#define CORBA_sequence_DsLogAdmin_LogRecord__alloc() ((CORBA_sequence_DsLogAdmin_LogRecord *)ORBit_small_alloc (TC_CORBA_sequence_DsLogAdmin_LogRecord))
#define CORBA_sequence_DsLogAdmin_LogRecord__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_DsLogAdmin_LogRecord,(m),(d))
#define CORBA_sequence_DsLogAdmin_LogRecord_allocbuf(l) ((DsLogAdmin_LogRecord*)ORBit_small_allocbuf (TC_CORBA_sequence_DsLogAdmin_LogRecord, (l)))
#define CORBA_sequence_DsLogAdmin_LogRecord_allocbuf(l) ((DsLogAdmin_LogRecord*)ORBit_small_allocbuf (TC_CORBA_sequence_DsLogAdmin_LogRecord, (l)))
#endif
#if !defined(_DsLogAdmin_RecordList_defined)
#define _DsLogAdmin_RecordList_defined 1
typedef CORBA_sequence_DsLogAdmin_LogRecord DsLogAdmin_RecordList;
#define DsLogAdmin_RecordList_marshal(x,y,z) CORBA_sequence_DsLogAdmin_LogRecord_marshal((x),(y),(z))
#define DsLogAdmin_RecordList_demarshal(x,y,z,i) CORBA_sequence_DsLogAdmin_LogRecord_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_DsLogAdmin_RecordList_0)
#define TC_IMPL_TC_DsLogAdmin_RecordList_0 'D'
#define TC_IMPL_TC_DsLogAdmin_RecordList_1 's'
#define TC_IMPL_TC_DsLogAdmin_RecordList_2 'L'
#define TC_IMPL_TC_DsLogAdmin_RecordList_3 'o'
#define TC_IMPL_TC_DsLogAdmin_RecordList_4 'g'
#define TC_IMPL_TC_DsLogAdmin_RecordList_5 'A'
#define TC_IMPL_TC_DsLogAdmin_RecordList_6 'd'
#define TC_IMPL_TC_DsLogAdmin_RecordList_7 'm'
#define TC_IMPL_TC_DsLogAdmin_RecordList_8 'i'
#define TC_IMPL_TC_DsLogAdmin_RecordList_9 'n'
#ifdef ORBIT_IDL_C_IMODULE_DsLogAdmin
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_DsLogAdmin_RecordList_struct;
#define TC_DsLogAdmin_RecordList ((CORBA_TypeCode)&TC_DsLogAdmin_RecordList_struct)
#endif
#define DsLogAdmin_RecordList__alloc() ((DsLogAdmin_RecordList *)ORBit_small_alloc (TC_CORBA_sequence_DsLogAdmin_LogRecord))
#define DsLogAdmin_RecordList__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_DsLogAdmin_LogRecord,(m),(d))
#define DsLogAdmin_RecordList_allocbuf(l) ((DsLogAdmin_LogRecord*)ORBit_small_allocbuf (TC_CORBA_sequence_DsLogAdmin_LogRecord, (l)))
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_CORBA_any)
#define ORBIT_DECL_CORBA_sequence_CORBA_any 1
#define ORBIT_IMPL_CORBA_sequence_CORBA_any_0 'D'
#define ORBIT_IMPL_CORBA_sequence_CORBA_any_1 's'
#define ORBIT_IMPL_CORBA_sequence_CORBA_any_2 'L'
#define ORBIT_IMPL_CORBA_sequence_CORBA_any_3 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_any_4 'g'
#define ORBIT_IMPL_CORBA_sequence_CORBA_any_5 'A'
#define ORBIT_IMPL_CORBA_sequence_CORBA_any_6 'd'
#define ORBIT_IMPL_CORBA_sequence_CORBA_any_7 'm'
#define ORBIT_IMPL_CORBA_sequence_CORBA_any_8 'i'
#define ORBIT_IMPL_CORBA_sequence_CORBA_any_9 'n'
#if !defined(_CORBA_sequence_CORBA_any_defined)
#define _CORBA_sequence_CORBA_any_defined 1
typedef struct { CORBA_unsigned_long _maximum, _length; CORBA_any* _buffer; CORBA_boolean _release; } CORBA_sequence_CORBA_any;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_CORBA_any_0)
#define TC_IMPL_TC_CORBA_sequence_CORBA_any_0 'D'
#define TC_IMPL_TC_CORBA_sequence_CORBA_any_1 's'
#define TC_IMPL_TC_CORBA_sequence_CORBA_any_2 'L'
#define TC_IMPL_TC_CORBA_sequence_CORBA_any_3 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_any_4 'g'
#define TC_IMPL_TC_CORBA_sequence_CORBA_any_5 'A'
#define TC_IMPL_TC_CORBA_sequence_CORBA_any_6 'd'
#define TC_IMPL_TC_CORBA_sequence_CORBA_any_7 'm'
#define TC_IMPL_TC_CORBA_sequence_CORBA_any_8 'i'
#define TC_IMPL_TC_CORBA_sequence_CORBA_any_9 'n'
#ifdef ORBIT_IDL_C_IMODULE_DsLogAdmin
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_CORBA_sequence_CORBA_any_struct;
#define TC_CORBA_sequence_CORBA_any ((CORBA_TypeCode)&TC_CORBA_sequence_CORBA_any_struct)
#endif
#define CORBA_sequence_CORBA_any__alloc() ((CORBA_sequence_CORBA_any *)ORBit_small_alloc (TC_CORBA_sequence_CORBA_any))
#define CORBA_sequence_CORBA_any__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_CORBA_any,(m),(d))
#define CORBA_sequence_CORBA_any_allocbuf(l) ((CORBA_any*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_any, (l)))
#define CORBA_sequence_CORBA_any_allocbuf(l) ((CORBA_any*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_any, (l)))
#endif
#if !defined(_DsLogAdmin_Anys_defined)
#define _DsLogAdmin_Anys_defined 1
typedef CORBA_sequence_CORBA_any DsLogAdmin_Anys;
#define DsLogAdmin_Anys_marshal(x,y,z) CORBA_sequence_CORBA_any_marshal((x),(y),(z))
#define DsLogAdmin_Anys_demarshal(x,y,z,i) CORBA_sequence_CORBA_any_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_DsLogAdmin_Anys_0)
#define TC_IMPL_TC_DsLogAdmin_Anys_0 'D'
#define TC_IMPL_TC_DsLogAdmin_Anys_1 's'
#define TC_IMPL_TC_DsLogAdmin_Anys_2 'L'
#define TC_IMPL_TC_DsLogAdmin_Anys_3 'o'
#define TC_IMPL_TC_DsLogAdmin_Anys_4 'g'
#define TC_IMPL_TC_DsLogAdmin_Anys_5 'A'
#define TC_IMPL_TC_DsLogAdmin_Anys_6 'd'
#define TC_IMPL_TC_DsLogAdmin_Anys_7 'm'
#define TC_IMPL_TC_DsLogAdmin_Anys_8 'i'
#define TC_IMPL_TC_DsLogAdmin_Anys_9 'n'
#ifdef ORBIT_IDL_C_IMODULE_DsLogAdmin
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_DsLogAdmin_Anys_struct;
#define TC_DsLogAdmin_Anys ((CORBA_TypeCode)&TC_DsLogAdmin_Anys_struct)
#endif
#define DsLogAdmin_Anys__alloc() ((DsLogAdmin_Anys *)ORBit_small_alloc (TC_CORBA_sequence_CORBA_any))
#define DsLogAdmin_Anys__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_CORBA_any,(m),(d))
#define DsLogAdmin_Anys_allocbuf(l) ((CORBA_any*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_any, (l)))
#endif
#if !defined(ORBIT_DECL_DsLogAdmin_Iterator) && !defined(_DsLogAdmin_Iterator_defined)
#define ORBIT_DECL_DsLogAdmin_Iterator 1
#define _DsLogAdmin_Iterator_defined 1
#define DsLogAdmin_Iterator__freekids CORBA_Object__freekids
typedef CORBA_Object DsLogAdmin_Iterator;
extern CORBA_unsigned_long DsLogAdmin_Iterator__classid;
#if !defined(TC_IMPL_TC_DsLogAdmin_Iterator_0)
#define TC_IMPL_TC_DsLogAdmin_Iterator_0 'D'
#define TC_IMPL_TC_DsLogAdmin_Iterator_1 's'
#define TC_IMPL_TC_DsLogAdmin_Iterator_2 'L'
#define TC_IMPL_TC_DsLogAdmin_Iterator_3 'o'
#define TC_IMPL_TC_DsLogAdmin_Iterator_4 'g'
#define TC_IMPL_TC_DsLogAdmin_Iterator_5 'A'
#define TC_IMPL_TC_DsLogAdmin_Iterator_6 'd'
#define TC_IMPL_TC_DsLogAdmin_Iterator_7 'm'
#define TC_IMPL_TC_DsLogAdmin_Iterator_8 'i'
#define TC_IMPL_TC_DsLogAdmin_Iterator_9 'n'
#ifdef ORBIT_IDL_C_IMODULE_DsLogAdmin
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_DsLogAdmin_Iterator_struct;
#define TC_DsLogAdmin_Iterator ((CORBA_TypeCode)&TC_DsLogAdmin_Iterator_struct)
#endif
#endif
#if !defined(_DsLogAdmin_AvailabilityStatus_defined)
#define _DsLogAdmin_AvailabilityStatus_defined 1
typedef struct DsLogAdmin_AvailabilityStatus_type DsLogAdmin_AvailabilityStatus;
struct DsLogAdmin_AvailabilityStatus_type {
CORBA_boolean off_duty;
CORBA_boolean log_full;
};

#if !defined(TC_IMPL_TC_DsLogAdmin_AvailabilityStatus_0)
#define TC_IMPL_TC_DsLogAdmin_AvailabilityStatus_0 'D'
#define TC_IMPL_TC_DsLogAdmin_AvailabilityStatus_1 's'
#define TC_IMPL_TC_DsLogAdmin_AvailabilityStatus_2 'L'
#define TC_IMPL_TC_DsLogAdmin_AvailabilityStatus_3 'o'
#define TC_IMPL_TC_DsLogAdmin_AvailabilityStatus_4 'g'
#define TC_IMPL_TC_DsLogAdmin_AvailabilityStatus_5 'A'
#define TC_IMPL_TC_DsLogAdmin_AvailabilityStatus_6 'd'
#define TC_IMPL_TC_DsLogAdmin_AvailabilityStatus_7 'm'
#define TC_IMPL_TC_DsLogAdmin_AvailabilityStatus_8 'i'
#define TC_IMPL_TC_DsLogAdmin_AvailabilityStatus_9 'n'
#ifdef ORBIT_IDL_C_IMODULE_DsLogAdmin
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_DsLogAdmin_AvailabilityStatus_struct;
#define TC_DsLogAdmin_AvailabilityStatus ((CORBA_TypeCode)&TC_DsLogAdmin_AvailabilityStatus_struct)
#endif
#define DsLogAdmin_AvailabilityStatus__alloc() ((DsLogAdmin_AvailabilityStatus *)ORBit_small_alloc (TC_DsLogAdmin_AvailabilityStatus))
#define DsLogAdmin_AvailabilityStatus__freekids(m,d) ORBit_small_freekids (TC_DsLogAdmin_AvailabilityStatus,(m),(d))
#endif
#if !defined(_DsLogAdmin_LogFullActionType_defined)
#define _DsLogAdmin_LogFullActionType_defined 1
typedef CORBA_unsigned_short DsLogAdmin_LogFullActionType;
#define DsLogAdmin_LogFullActionType_marshal(x,y,z) CORBA_unsigned_short_marshal((x),(y),(z))
#define DsLogAdmin_LogFullActionType_demarshal(x,y,z,i) CORBA_unsigned_short_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_DsLogAdmin_LogFullActionType_0)
#define TC_IMPL_TC_DsLogAdmin_LogFullActionType_0 'D'
#define TC_IMPL_TC_DsLogAdmin_LogFullActionType_1 's'
#define TC_IMPL_TC_DsLogAdmin_LogFullActionType_2 'L'
#define TC_IMPL_TC_DsLogAdmin_LogFullActionType_3 'o'
#define TC_IMPL_TC_DsLogAdmin_LogFullActionType_4 'g'
#define TC_IMPL_TC_DsLogAdmin_LogFullActionType_5 'A'
#define TC_IMPL_TC_DsLogAdmin_LogFullActionType_6 'd'
#define TC_IMPL_TC_DsLogAdmin_LogFullActionType_7 'm'
#define TC_IMPL_TC_DsLogAdmin_LogFullActionType_8 'i'
#define TC_IMPL_TC_DsLogAdmin_LogFullActionType_9 'n'
#ifdef ORBIT_IDL_C_IMODULE_DsLogAdmin
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_DsLogAdmin_LogFullActionType_struct;
#define TC_DsLogAdmin_LogFullActionType ((CORBA_TypeCode)&TC_DsLogAdmin_LogFullActionType_struct)
#endif
#define DsLogAdmin_LogFullActionType__alloc() ((DsLogAdmin_LogFullActionType *)ORBit_small_alloc (TC_CORBA_unsigned_short))
#define DsLogAdmin_LogFullActionType__freekids(m,d) ORBit_small_freekids (TC_CORBA_unsigned_short,(m),(d))
#endif
#ifndef DsLogAdmin_wrap
#define DsLogAdmin_wrap 0U
#endif /* !DsLogAdmin_wrap */

#ifndef DsLogAdmin_halt
#define DsLogAdmin_halt 1U
#endif /* !DsLogAdmin_halt */

#if !defined(_DsLogAdmin_Time24_defined)
#define _DsLogAdmin_Time24_defined 1
typedef struct DsLogAdmin_Time24_type DsLogAdmin_Time24;
struct DsLogAdmin_Time24_type {
CORBA_unsigned_short hour;
CORBA_unsigned_short minute;
};

#if !defined(TC_IMPL_TC_DsLogAdmin_Time24_0)
#define TC_IMPL_TC_DsLogAdmin_Time24_0 'D'
#define TC_IMPL_TC_DsLogAdmin_Time24_1 's'
#define TC_IMPL_TC_DsLogAdmin_Time24_2 'L'
#define TC_IMPL_TC_DsLogAdmin_Time24_3 'o'
#define TC_IMPL_TC_DsLogAdmin_Time24_4 'g'
#define TC_IMPL_TC_DsLogAdmin_Time24_5 'A'
#define TC_IMPL_TC_DsLogAdmin_Time24_6 'd'
#define TC_IMPL_TC_DsLogAdmin_Time24_7 'm'
#define TC_IMPL_TC_DsLogAdmin_Time24_8 'i'
#define TC_IMPL_TC_DsLogAdmin_Time24_9 'n'
#ifdef ORBIT_IDL_C_IMODULE_DsLogAdmin
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_DsLogAdmin_Time24_struct;
#define TC_DsLogAdmin_Time24 ((CORBA_TypeCode)&TC_DsLogAdmin_Time24_struct)
#endif
#define DsLogAdmin_Time24__alloc() ((DsLogAdmin_Time24 *)ORBit_small_alloc (TC_DsLogAdmin_Time24))
#define DsLogAdmin_Time24__freekids(m,d) ORBit_small_freekids (TC_DsLogAdmin_Time24,(m),(d))
#endif
#if !defined(_DsLogAdmin_Time24Interval_defined)
#define _DsLogAdmin_Time24Interval_defined 1
typedef struct DsLogAdmin_Time24Interval_type DsLogAdmin_Time24Interval;
struct DsLogAdmin_Time24Interval_type {
DsLogAdmin_Time24 start;
DsLogAdmin_Time24 stop;
};

#if !defined(TC_IMPL_TC_DsLogAdmin_Time24Interval_0)
#define TC_IMPL_TC_DsLogAdmin_Time24Interval_0 'D'
#define TC_IMPL_TC_DsLogAdmin_Time24Interval_1 's'
#define TC_IMPL_TC_DsLogAdmin_Time24Interval_2 'L'
#define TC_IMPL_TC_DsLogAdmin_Time24Interval_3 'o'
#define TC_IMPL_TC_DsLogAdmin_Time24Interval_4 'g'
#define TC_IMPL_TC_DsLogAdmin_Time24Interval_5 'A'
#define TC_IMPL_TC_DsLogAdmin_Time24Interval_6 'd'
#define TC_IMPL_TC_DsLogAdmin_Time24Interval_7 'm'
#define TC_IMPL_TC_DsLogAdmin_Time24Interval_8 'i'
#define TC_IMPL_TC_DsLogAdmin_Time24Interval_9 'n'
#ifdef ORBIT_IDL_C_IMODULE_DsLogAdmin
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_DsLogAdmin_Time24Interval_struct;
#define TC_DsLogAdmin_Time24Interval ((CORBA_TypeCode)&TC_DsLogAdmin_Time24Interval_struct)
#endif
#define DsLogAdmin_Time24Interval__alloc() ((DsLogAdmin_Time24Interval *)ORBit_small_alloc (TC_DsLogAdmin_Time24Interval))
#define DsLogAdmin_Time24Interval__freekids(m,d) ORBit_small_freekids (TC_DsLogAdmin_Time24Interval,(m),(d))
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_DsLogAdmin_Time24Interval)
#define ORBIT_DECL_CORBA_sequence_DsLogAdmin_Time24Interval 1
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_Time24Interval_0 'D'
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_Time24Interval_1 's'
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_Time24Interval_2 'L'
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_Time24Interval_3 'o'
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_Time24Interval_4 'g'
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_Time24Interval_5 'A'
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_Time24Interval_6 'd'
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_Time24Interval_7 'm'
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_Time24Interval_8 'i'
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_Time24Interval_9 'n'
#if !defined(_CORBA_sequence_DsLogAdmin_Time24Interval_defined)
#define _CORBA_sequence_DsLogAdmin_Time24Interval_defined 1
typedef struct { CORBA_unsigned_long _maximum, _length; DsLogAdmin_Time24Interval* _buffer; CORBA_boolean _release; } CORBA_sequence_DsLogAdmin_Time24Interval;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_DsLogAdmin_Time24Interval_0)
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_Time24Interval_0 'D'
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_Time24Interval_1 's'
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_Time24Interval_2 'L'
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_Time24Interval_3 'o'
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_Time24Interval_4 'g'
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_Time24Interval_5 'A'
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_Time24Interval_6 'd'
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_Time24Interval_7 'm'
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_Time24Interval_8 'i'
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_Time24Interval_9 'n'
#ifdef ORBIT_IDL_C_IMODULE_DsLogAdmin
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_CORBA_sequence_DsLogAdmin_Time24Interval_struct;
#define TC_CORBA_sequence_DsLogAdmin_Time24Interval ((CORBA_TypeCode)&TC_CORBA_sequence_DsLogAdmin_Time24Interval_struct)
#endif
#define CORBA_sequence_DsLogAdmin_Time24Interval__alloc() ((CORBA_sequence_DsLogAdmin_Time24Interval *)ORBit_small_alloc (TC_CORBA_sequence_DsLogAdmin_Time24Interval))
#define CORBA_sequence_DsLogAdmin_Time24Interval__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_DsLogAdmin_Time24Interval,(m),(d))
#define CORBA_sequence_DsLogAdmin_Time24Interval_allocbuf(l) ((DsLogAdmin_Time24Interval*)ORBit_small_allocbuf (TC_CORBA_sequence_DsLogAdmin_Time24Interval, (l)))
#define CORBA_sequence_DsLogAdmin_Time24Interval_allocbuf(l) ((DsLogAdmin_Time24Interval*)ORBit_small_allocbuf (TC_CORBA_sequence_DsLogAdmin_Time24Interval, (l)))
#endif
#if !defined(_DsLogAdmin_IntervalsOfDay_defined)
#define _DsLogAdmin_IntervalsOfDay_defined 1
typedef CORBA_sequence_DsLogAdmin_Time24Interval DsLogAdmin_IntervalsOfDay;
#define DsLogAdmin_IntervalsOfDay_marshal(x,y,z) CORBA_sequence_DsLogAdmin_Time24Interval_marshal((x),(y),(z))
#define DsLogAdmin_IntervalsOfDay_demarshal(x,y,z,i) CORBA_sequence_DsLogAdmin_Time24Interval_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_DsLogAdmin_IntervalsOfDay_0)
#define TC_IMPL_TC_DsLogAdmin_IntervalsOfDay_0 'D'
#define TC_IMPL_TC_DsLogAdmin_IntervalsOfDay_1 's'
#define TC_IMPL_TC_DsLogAdmin_IntervalsOfDay_2 'L'
#define TC_IMPL_TC_DsLogAdmin_IntervalsOfDay_3 'o'
#define TC_IMPL_TC_DsLogAdmin_IntervalsOfDay_4 'g'
#define TC_IMPL_TC_DsLogAdmin_IntervalsOfDay_5 'A'
#define TC_IMPL_TC_DsLogAdmin_IntervalsOfDay_6 'd'
#define TC_IMPL_TC_DsLogAdmin_IntervalsOfDay_7 'm'
#define TC_IMPL_TC_DsLogAdmin_IntervalsOfDay_8 'i'
#define TC_IMPL_TC_DsLogAdmin_IntervalsOfDay_9 'n'
#ifdef ORBIT_IDL_C_IMODULE_DsLogAdmin
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_DsLogAdmin_IntervalsOfDay_struct;
#define TC_DsLogAdmin_IntervalsOfDay ((CORBA_TypeCode)&TC_DsLogAdmin_IntervalsOfDay_struct)
#endif
#define DsLogAdmin_IntervalsOfDay__alloc() ((DsLogAdmin_IntervalsOfDay *)ORBit_small_alloc (TC_CORBA_sequence_DsLogAdmin_Time24Interval))
#define DsLogAdmin_IntervalsOfDay__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_DsLogAdmin_Time24Interval,(m),(d))
#define DsLogAdmin_IntervalsOfDay_allocbuf(l) ((DsLogAdmin_Time24Interval*)ORBit_small_allocbuf (TC_CORBA_sequence_DsLogAdmin_Time24Interval, (l)))
#endif
#ifndef DsLogAdmin_Sunday
#define DsLogAdmin_Sunday 1U
#endif /* !DsLogAdmin_Sunday */

#ifndef DsLogAdmin_Monday
#define DsLogAdmin_Monday 2U
#endif /* !DsLogAdmin_Monday */

#ifndef DsLogAdmin_Tuesday
#define DsLogAdmin_Tuesday 4U
#endif /* !DsLogAdmin_Tuesday */

#ifndef DsLogAdmin_Wednesday
#define DsLogAdmin_Wednesday 8U
#endif /* !DsLogAdmin_Wednesday */

#ifndef DsLogAdmin_Thursday
#define DsLogAdmin_Thursday 16U
#endif /* !DsLogAdmin_Thursday */

#ifndef DsLogAdmin_Friday
#define DsLogAdmin_Friday 32U
#endif /* !DsLogAdmin_Friday */

#ifndef DsLogAdmin_Saturday
#define DsLogAdmin_Saturday 64U
#endif /* !DsLogAdmin_Saturday */

#if !defined(_DsLogAdmin_DaysOfWeek_defined)
#define _DsLogAdmin_DaysOfWeek_defined 1
typedef CORBA_unsigned_short DsLogAdmin_DaysOfWeek;
#define DsLogAdmin_DaysOfWeek_marshal(x,y,z) CORBA_unsigned_short_marshal((x),(y),(z))
#define DsLogAdmin_DaysOfWeek_demarshal(x,y,z,i) CORBA_unsigned_short_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_DsLogAdmin_DaysOfWeek_0)
#define TC_IMPL_TC_DsLogAdmin_DaysOfWeek_0 'D'
#define TC_IMPL_TC_DsLogAdmin_DaysOfWeek_1 's'
#define TC_IMPL_TC_DsLogAdmin_DaysOfWeek_2 'L'
#define TC_IMPL_TC_DsLogAdmin_DaysOfWeek_3 'o'
#define TC_IMPL_TC_DsLogAdmin_DaysOfWeek_4 'g'
#define TC_IMPL_TC_DsLogAdmin_DaysOfWeek_5 'A'
#define TC_IMPL_TC_DsLogAdmin_DaysOfWeek_6 'd'
#define TC_IMPL_TC_DsLogAdmin_DaysOfWeek_7 'm'
#define TC_IMPL_TC_DsLogAdmin_DaysOfWeek_8 'i'
#define TC_IMPL_TC_DsLogAdmin_DaysOfWeek_9 'n'
#ifdef ORBIT_IDL_C_IMODULE_DsLogAdmin
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_DsLogAdmin_DaysOfWeek_struct;
#define TC_DsLogAdmin_DaysOfWeek ((CORBA_TypeCode)&TC_DsLogAdmin_DaysOfWeek_struct)
#endif
#define DsLogAdmin_DaysOfWeek__alloc() ((DsLogAdmin_DaysOfWeek *)ORBit_small_alloc (TC_CORBA_unsigned_short))
#define DsLogAdmin_DaysOfWeek__freekids(m,d) ORBit_small_freekids (TC_CORBA_unsigned_short,(m),(d))
#endif
#if !defined(_DsLogAdmin_WeekMaskItem_defined)
#define _DsLogAdmin_WeekMaskItem_defined 1
typedef struct DsLogAdmin_WeekMaskItem_type DsLogAdmin_WeekMaskItem;
struct DsLogAdmin_WeekMaskItem_type {
DsLogAdmin_DaysOfWeek days;
DsLogAdmin_IntervalsOfDay intervals;
};

#if !defined(TC_IMPL_TC_DsLogAdmin_WeekMaskItem_0)
#define TC_IMPL_TC_DsLogAdmin_WeekMaskItem_0 'D'
#define TC_IMPL_TC_DsLogAdmin_WeekMaskItem_1 's'
#define TC_IMPL_TC_DsLogAdmin_WeekMaskItem_2 'L'
#define TC_IMPL_TC_DsLogAdmin_WeekMaskItem_3 'o'
#define TC_IMPL_TC_DsLogAdmin_WeekMaskItem_4 'g'
#define TC_IMPL_TC_DsLogAdmin_WeekMaskItem_5 'A'
#define TC_IMPL_TC_DsLogAdmin_WeekMaskItem_6 'd'
#define TC_IMPL_TC_DsLogAdmin_WeekMaskItem_7 'm'
#define TC_IMPL_TC_DsLogAdmin_WeekMaskItem_8 'i'
#define TC_IMPL_TC_DsLogAdmin_WeekMaskItem_9 'n'
#ifdef ORBIT_IDL_C_IMODULE_DsLogAdmin
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_DsLogAdmin_WeekMaskItem_struct;
#define TC_DsLogAdmin_WeekMaskItem ((CORBA_TypeCode)&TC_DsLogAdmin_WeekMaskItem_struct)
#endif
#define DsLogAdmin_WeekMaskItem__alloc() ((DsLogAdmin_WeekMaskItem *)ORBit_small_alloc (TC_DsLogAdmin_WeekMaskItem))
#define DsLogAdmin_WeekMaskItem__freekids(m,d) ORBit_small_freekids (TC_DsLogAdmin_WeekMaskItem,(m),(d))
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_DsLogAdmin_WeekMaskItem)
#define ORBIT_DECL_CORBA_sequence_DsLogAdmin_WeekMaskItem 1
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_WeekMaskItem_0 'D'
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_WeekMaskItem_1 's'
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_WeekMaskItem_2 'L'
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_WeekMaskItem_3 'o'
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_WeekMaskItem_4 'g'
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_WeekMaskItem_5 'A'
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_WeekMaskItem_6 'd'
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_WeekMaskItem_7 'm'
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_WeekMaskItem_8 'i'
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_WeekMaskItem_9 'n'
#if !defined(_CORBA_sequence_DsLogAdmin_WeekMaskItem_defined)
#define _CORBA_sequence_DsLogAdmin_WeekMaskItem_defined 1
typedef struct { CORBA_unsigned_long _maximum, _length; DsLogAdmin_WeekMaskItem* _buffer; CORBA_boolean _release; } CORBA_sequence_DsLogAdmin_WeekMaskItem;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_DsLogAdmin_WeekMaskItem_0)
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_WeekMaskItem_0 'D'
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_WeekMaskItem_1 's'
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_WeekMaskItem_2 'L'
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_WeekMaskItem_3 'o'
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_WeekMaskItem_4 'g'
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_WeekMaskItem_5 'A'
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_WeekMaskItem_6 'd'
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_WeekMaskItem_7 'm'
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_WeekMaskItem_8 'i'
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_WeekMaskItem_9 'n'
#ifdef ORBIT_IDL_C_IMODULE_DsLogAdmin
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_CORBA_sequence_DsLogAdmin_WeekMaskItem_struct;
#define TC_CORBA_sequence_DsLogAdmin_WeekMaskItem ((CORBA_TypeCode)&TC_CORBA_sequence_DsLogAdmin_WeekMaskItem_struct)
#endif
#define CORBA_sequence_DsLogAdmin_WeekMaskItem__alloc() ((CORBA_sequence_DsLogAdmin_WeekMaskItem *)ORBit_small_alloc (TC_CORBA_sequence_DsLogAdmin_WeekMaskItem))
#define CORBA_sequence_DsLogAdmin_WeekMaskItem__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_DsLogAdmin_WeekMaskItem,(m),(d))
#define CORBA_sequence_DsLogAdmin_WeekMaskItem_allocbuf(l) ((DsLogAdmin_WeekMaskItem*)ORBit_small_allocbuf (TC_CORBA_sequence_DsLogAdmin_WeekMaskItem, (l)))
#define CORBA_sequence_DsLogAdmin_WeekMaskItem_allocbuf(l) ((DsLogAdmin_WeekMaskItem*)ORBit_small_allocbuf (TC_CORBA_sequence_DsLogAdmin_WeekMaskItem, (l)))
#endif
#if !defined(_DsLogAdmin_WeekMask_defined)
#define _DsLogAdmin_WeekMask_defined 1
typedef CORBA_sequence_DsLogAdmin_WeekMaskItem DsLogAdmin_WeekMask;
#define DsLogAdmin_WeekMask_marshal(x,y,z) CORBA_sequence_DsLogAdmin_WeekMaskItem_marshal((x),(y),(z))
#define DsLogAdmin_WeekMask_demarshal(x,y,z,i) CORBA_sequence_DsLogAdmin_WeekMaskItem_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_DsLogAdmin_WeekMask_0)
#define TC_IMPL_TC_DsLogAdmin_WeekMask_0 'D'
#define TC_IMPL_TC_DsLogAdmin_WeekMask_1 's'
#define TC_IMPL_TC_DsLogAdmin_WeekMask_2 'L'
#define TC_IMPL_TC_DsLogAdmin_WeekMask_3 'o'
#define TC_IMPL_TC_DsLogAdmin_WeekMask_4 'g'
#define TC_IMPL_TC_DsLogAdmin_WeekMask_5 'A'
#define TC_IMPL_TC_DsLogAdmin_WeekMask_6 'd'
#define TC_IMPL_TC_DsLogAdmin_WeekMask_7 'm'
#define TC_IMPL_TC_DsLogAdmin_WeekMask_8 'i'
#define TC_IMPL_TC_DsLogAdmin_WeekMask_9 'n'
#ifdef ORBIT_IDL_C_IMODULE_DsLogAdmin
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_DsLogAdmin_WeekMask_struct;
#define TC_DsLogAdmin_WeekMask ((CORBA_TypeCode)&TC_DsLogAdmin_WeekMask_struct)
#endif
#define DsLogAdmin_WeekMask__alloc() ((DsLogAdmin_WeekMask *)ORBit_small_alloc (TC_CORBA_sequence_DsLogAdmin_WeekMaskItem))
#define DsLogAdmin_WeekMask__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_DsLogAdmin_WeekMaskItem,(m),(d))
#define DsLogAdmin_WeekMask_allocbuf(l) ((DsLogAdmin_WeekMaskItem*)ORBit_small_allocbuf (TC_CORBA_sequence_DsLogAdmin_WeekMaskItem, (l)))
#endif
#if !defined(_DsLogAdmin_Threshold_defined)
#define _DsLogAdmin_Threshold_defined 1
typedef CORBA_unsigned_short DsLogAdmin_Threshold;
#define DsLogAdmin_Threshold_marshal(x,y,z) CORBA_unsigned_short_marshal((x),(y),(z))
#define DsLogAdmin_Threshold_demarshal(x,y,z,i) CORBA_unsigned_short_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_DsLogAdmin_Threshold_0)
#define TC_IMPL_TC_DsLogAdmin_Threshold_0 'D'
#define TC_IMPL_TC_DsLogAdmin_Threshold_1 's'
#define TC_IMPL_TC_DsLogAdmin_Threshold_2 'L'
#define TC_IMPL_TC_DsLogAdmin_Threshold_3 'o'
#define TC_IMPL_TC_DsLogAdmin_Threshold_4 'g'
#define TC_IMPL_TC_DsLogAdmin_Threshold_5 'A'
#define TC_IMPL_TC_DsLogAdmin_Threshold_6 'd'
#define TC_IMPL_TC_DsLogAdmin_Threshold_7 'm'
#define TC_IMPL_TC_DsLogAdmin_Threshold_8 'i'
#define TC_IMPL_TC_DsLogAdmin_Threshold_9 'n'
#ifdef ORBIT_IDL_C_IMODULE_DsLogAdmin
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_DsLogAdmin_Threshold_struct;
#define TC_DsLogAdmin_Threshold ((CORBA_TypeCode)&TC_DsLogAdmin_Threshold_struct)
#endif
#define DsLogAdmin_Threshold__alloc() ((DsLogAdmin_Threshold *)ORBit_small_alloc (TC_CORBA_unsigned_short))
#define DsLogAdmin_Threshold__freekids(m,d) ORBit_small_freekids (TC_CORBA_unsigned_short,(m),(d))
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_CORBA_unsigned_short)
#define ORBIT_DECL_CORBA_sequence_CORBA_unsigned_short 1
#define ORBIT_IMPL_CORBA_sequence_CORBA_unsigned_short_0 'D'
#define ORBIT_IMPL_CORBA_sequence_CORBA_unsigned_short_1 's'
#define ORBIT_IMPL_CORBA_sequence_CORBA_unsigned_short_2 'L'
#define ORBIT_IMPL_CORBA_sequence_CORBA_unsigned_short_3 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_unsigned_short_4 'g'
#define ORBIT_IMPL_CORBA_sequence_CORBA_unsigned_short_5 'A'
#define ORBIT_IMPL_CORBA_sequence_CORBA_unsigned_short_6 'd'
#define ORBIT_IMPL_CORBA_sequence_CORBA_unsigned_short_7 'm'
#define ORBIT_IMPL_CORBA_sequence_CORBA_unsigned_short_8 'i'
#define ORBIT_IMPL_CORBA_sequence_CORBA_unsigned_short_9 'n'
#if !defined(_CORBA_sequence_CORBA_unsigned_short_defined)
#define _CORBA_sequence_CORBA_unsigned_short_defined 1
typedef struct { CORBA_unsigned_long _maximum, _length; CORBA_unsigned_short* _buffer; CORBA_boolean _release; } CORBA_sequence_CORBA_unsigned_short;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_CORBA_unsigned_short_0)
#define TC_IMPL_TC_CORBA_sequence_CORBA_unsigned_short_0 'D'
#define TC_IMPL_TC_CORBA_sequence_CORBA_unsigned_short_1 's'
#define TC_IMPL_TC_CORBA_sequence_CORBA_unsigned_short_2 'L'
#define TC_IMPL_TC_CORBA_sequence_CORBA_unsigned_short_3 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_unsigned_short_4 'g'
#define TC_IMPL_TC_CORBA_sequence_CORBA_unsigned_short_5 'A'
#define TC_IMPL_TC_CORBA_sequence_CORBA_unsigned_short_6 'd'
#define TC_IMPL_TC_CORBA_sequence_CORBA_unsigned_short_7 'm'
#define TC_IMPL_TC_CORBA_sequence_CORBA_unsigned_short_8 'i'
#define TC_IMPL_TC_CORBA_sequence_CORBA_unsigned_short_9 'n'
#ifdef ORBIT_IDL_C_IMODULE_DsLogAdmin
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_CORBA_sequence_CORBA_unsigned_short_struct;
#define TC_CORBA_sequence_CORBA_unsigned_short ((CORBA_TypeCode)&TC_CORBA_sequence_CORBA_unsigned_short_struct)
#endif
#define CORBA_sequence_CORBA_unsigned_short__alloc() ((CORBA_sequence_CORBA_unsigned_short *)ORBit_small_alloc (TC_CORBA_sequence_CORBA_unsigned_short))
#define CORBA_sequence_CORBA_unsigned_short__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_CORBA_unsigned_short,(m),(d))
#define CORBA_sequence_CORBA_unsigned_short_allocbuf(l) ((CORBA_unsigned_short*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_unsigned_short, (l)))
#define CORBA_sequence_CORBA_unsigned_short_allocbuf(l) ((CORBA_unsigned_short*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_unsigned_short, (l)))
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_DsLogAdmin_Threshold)
#define ORBIT_DECL_CORBA_sequence_DsLogAdmin_Threshold 1
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_Threshold_0 'D'
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_Threshold_1 's'
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_Threshold_2 'L'
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_Threshold_3 'o'
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_Threshold_4 'g'
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_Threshold_5 'A'
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_Threshold_6 'd'
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_Threshold_7 'm'
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_Threshold_8 'i'
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_Threshold_9 'n'
#if !defined(_CORBA_sequence_DsLogAdmin_Threshold_defined)
#define _CORBA_sequence_DsLogAdmin_Threshold_defined 1
typedef CORBA_sequence_CORBA_unsigned_short CORBA_sequence_DsLogAdmin_Threshold;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_DsLogAdmin_Threshold_0)
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_Threshold_0 'D'
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_Threshold_1 's'
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_Threshold_2 'L'
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_Threshold_3 'o'
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_Threshold_4 'g'
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_Threshold_5 'A'
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_Threshold_6 'd'
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_Threshold_7 'm'
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_Threshold_8 'i'
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_Threshold_9 'n'
#ifdef ORBIT_IDL_C_IMODULE_DsLogAdmin
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_CORBA_sequence_DsLogAdmin_Threshold_struct;
#define TC_CORBA_sequence_DsLogAdmin_Threshold ((CORBA_TypeCode)&TC_CORBA_sequence_DsLogAdmin_Threshold_struct)
#endif
#define CORBA_sequence_DsLogAdmin_Threshold__alloc CORBA_sequence_CORBA_unsigned_short__alloc
#define CORBA_sequence_DsLogAdmin_Threshold__freekids CORBA_sequence_CORBA_unsigned_short__freekids
#define CORBA_sequence_DsLogAdmin_Threshold_allocbuf CORBA_sequence_CORBA_unsigned_short_allocbuf
#define CORBA_sequence_DsLogAdmin_Threshold_marshal(x,y,z) CORBA_sequence_CORBA_unsigned_short_marshal((x),(y),(z))
#define CORBA_sequence_DsLogAdmin_Threshold_demarshal(x,y,z,i) CORBA_sequence_CORBA_unsigned_short_demarshal((x),(y),(z),(i))
#endif
#if !defined(_DsLogAdmin_CapacityAlarmThresholdList_defined)
#define _DsLogAdmin_CapacityAlarmThresholdList_defined 1
typedef CORBA_sequence_DsLogAdmin_Threshold DsLogAdmin_CapacityAlarmThresholdList;
#define DsLogAdmin_CapacityAlarmThresholdList_marshal(x,y,z) CORBA_sequence_DsLogAdmin_Threshold_marshal((x),(y),(z))
#define DsLogAdmin_CapacityAlarmThresholdList_demarshal(x,y,z,i) CORBA_sequence_DsLogAdmin_Threshold_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_DsLogAdmin_CapacityAlarmThresholdList_0)
#define TC_IMPL_TC_DsLogAdmin_CapacityAlarmThresholdList_0 'D'
#define TC_IMPL_TC_DsLogAdmin_CapacityAlarmThresholdList_1 's'
#define TC_IMPL_TC_DsLogAdmin_CapacityAlarmThresholdList_2 'L'
#define TC_IMPL_TC_DsLogAdmin_CapacityAlarmThresholdList_3 'o'
#define TC_IMPL_TC_DsLogAdmin_CapacityAlarmThresholdList_4 'g'
#define TC_IMPL_TC_DsLogAdmin_CapacityAlarmThresholdList_5 'A'
#define TC_IMPL_TC_DsLogAdmin_CapacityAlarmThresholdList_6 'd'
#define TC_IMPL_TC_DsLogAdmin_CapacityAlarmThresholdList_7 'm'
#define TC_IMPL_TC_DsLogAdmin_CapacityAlarmThresholdList_8 'i'
#define TC_IMPL_TC_DsLogAdmin_CapacityAlarmThresholdList_9 'n'
#ifdef ORBIT_IDL_C_IMODULE_DsLogAdmin
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_DsLogAdmin_CapacityAlarmThresholdList_struct;
#define TC_DsLogAdmin_CapacityAlarmThresholdList ((CORBA_TypeCode)&TC_DsLogAdmin_CapacityAlarmThresholdList_struct)
#endif
#define DsLogAdmin_CapacityAlarmThresholdList__alloc() ((DsLogAdmin_CapacityAlarmThresholdList *)ORBit_small_alloc (TC_CORBA_sequence_DsLogAdmin_Threshold))
#define DsLogAdmin_CapacityAlarmThresholdList__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_DsLogAdmin_Threshold,(m),(d))
#define DsLogAdmin_CapacityAlarmThresholdList_allocbuf(l) ((DsLogAdmin_Threshold*)ORBit_small_allocbuf (TC_CORBA_sequence_DsLogAdmin_Threshold, (l)))
#endif
#if !defined(ORBIT_DECL_DsLogAdmin_LogMgr) && !defined(_DsLogAdmin_LogMgr_defined)
#define ORBIT_DECL_DsLogAdmin_LogMgr 1
#define _DsLogAdmin_LogMgr_defined 1
#define DsLogAdmin_LogMgr__freekids CORBA_Object__freekids
typedef CORBA_Object DsLogAdmin_LogMgr;
extern CORBA_unsigned_long DsLogAdmin_LogMgr__classid;
#if !defined(TC_IMPL_TC_DsLogAdmin_LogMgr_0)
#define TC_IMPL_TC_DsLogAdmin_LogMgr_0 'D'
#define TC_IMPL_TC_DsLogAdmin_LogMgr_1 's'
#define TC_IMPL_TC_DsLogAdmin_LogMgr_2 'L'
#define TC_IMPL_TC_DsLogAdmin_LogMgr_3 'o'
#define TC_IMPL_TC_DsLogAdmin_LogMgr_4 'g'
#define TC_IMPL_TC_DsLogAdmin_LogMgr_5 'A'
#define TC_IMPL_TC_DsLogAdmin_LogMgr_6 'd'
#define TC_IMPL_TC_DsLogAdmin_LogMgr_7 'm'
#define TC_IMPL_TC_DsLogAdmin_LogMgr_8 'i'
#define TC_IMPL_TC_DsLogAdmin_LogMgr_9 'n'
#ifdef ORBIT_IDL_C_IMODULE_DsLogAdmin
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_DsLogAdmin_LogMgr_struct;
#define TC_DsLogAdmin_LogMgr ((CORBA_TypeCode)&TC_DsLogAdmin_LogMgr_struct)
#endif
#endif
#if !defined(_DsLogAdmin_OperationalState_defined)
#define _DsLogAdmin_OperationalState_defined 1
typedef enum {
  DsLogAdmin_disabled,
  DsLogAdmin_enabled
} DsLogAdmin_OperationalState;
#if !defined(TC_IMPL_TC_DsLogAdmin_OperationalState_0)
#define TC_IMPL_TC_DsLogAdmin_OperationalState_0 'D'
#define TC_IMPL_TC_DsLogAdmin_OperationalState_1 's'
#define TC_IMPL_TC_DsLogAdmin_OperationalState_2 'L'
#define TC_IMPL_TC_DsLogAdmin_OperationalState_3 'o'
#define TC_IMPL_TC_DsLogAdmin_OperationalState_4 'g'
#define TC_IMPL_TC_DsLogAdmin_OperationalState_5 'A'
#define TC_IMPL_TC_DsLogAdmin_OperationalState_6 'd'
#define TC_IMPL_TC_DsLogAdmin_OperationalState_7 'm'
#define TC_IMPL_TC_DsLogAdmin_OperationalState_8 'i'
#define TC_IMPL_TC_DsLogAdmin_OperationalState_9 'n'
#ifdef ORBIT_IDL_C_IMODULE_DsLogAdmin
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_DsLogAdmin_OperationalState_struct;
#define TC_DsLogAdmin_OperationalState ((CORBA_TypeCode)&TC_DsLogAdmin_OperationalState_struct)
#endif
#endif
#if !defined(_DsLogAdmin_AdministrativeState_defined)
#define _DsLogAdmin_AdministrativeState_defined 1
typedef enum {
  DsLogAdmin_locked,
  DsLogAdmin_unlocked
} DsLogAdmin_AdministrativeState;
#if !defined(TC_IMPL_TC_DsLogAdmin_AdministrativeState_0)
#define TC_IMPL_TC_DsLogAdmin_AdministrativeState_0 'D'
#define TC_IMPL_TC_DsLogAdmin_AdministrativeState_1 's'
#define TC_IMPL_TC_DsLogAdmin_AdministrativeState_2 'L'
#define TC_IMPL_TC_DsLogAdmin_AdministrativeState_3 'o'
#define TC_IMPL_TC_DsLogAdmin_AdministrativeState_4 'g'
#define TC_IMPL_TC_DsLogAdmin_AdministrativeState_5 'A'
#define TC_IMPL_TC_DsLogAdmin_AdministrativeState_6 'd'
#define TC_IMPL_TC_DsLogAdmin_AdministrativeState_7 'm'
#define TC_IMPL_TC_DsLogAdmin_AdministrativeState_8 'i'
#define TC_IMPL_TC_DsLogAdmin_AdministrativeState_9 'n'
#ifdef ORBIT_IDL_C_IMODULE_DsLogAdmin
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_DsLogAdmin_AdministrativeState_struct;
#define TC_DsLogAdmin_AdministrativeState ((CORBA_TypeCode)&TC_DsLogAdmin_AdministrativeState_struct)
#endif
#endif
#if !defined(_DsLogAdmin_ForwardingState_defined)
#define _DsLogAdmin_ForwardingState_defined 1
typedef enum {
  DsLogAdmin_on,
  DsLogAdmin_off
} DsLogAdmin_ForwardingState;
#if !defined(TC_IMPL_TC_DsLogAdmin_ForwardingState_0)
#define TC_IMPL_TC_DsLogAdmin_ForwardingState_0 'D'
#define TC_IMPL_TC_DsLogAdmin_ForwardingState_1 's'
#define TC_IMPL_TC_DsLogAdmin_ForwardingState_2 'L'
#define TC_IMPL_TC_DsLogAdmin_ForwardingState_3 'o'
#define TC_IMPL_TC_DsLogAdmin_ForwardingState_4 'g'
#define TC_IMPL_TC_DsLogAdmin_ForwardingState_5 'A'
#define TC_IMPL_TC_DsLogAdmin_ForwardingState_6 'd'
#define TC_IMPL_TC_DsLogAdmin_ForwardingState_7 'm'
#define TC_IMPL_TC_DsLogAdmin_ForwardingState_8 'i'
#define TC_IMPL_TC_DsLogAdmin_ForwardingState_9 'n'
#ifdef ORBIT_IDL_C_IMODULE_DsLogAdmin
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_DsLogAdmin_ForwardingState_struct;
#define TC_DsLogAdmin_ForwardingState ((CORBA_TypeCode)&TC_DsLogAdmin_ForwardingState_struct)
#endif
#endif
#if !defined(_DsLogAdmin_QoSType_defined)
#define _DsLogAdmin_QoSType_defined 1
typedef CORBA_unsigned_short DsLogAdmin_QoSType;
#define DsLogAdmin_QoSType_marshal(x,y,z) CORBA_unsigned_short_marshal((x),(y),(z))
#define DsLogAdmin_QoSType_demarshal(x,y,z,i) CORBA_unsigned_short_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_DsLogAdmin_QoSType_0)
#define TC_IMPL_TC_DsLogAdmin_QoSType_0 'D'
#define TC_IMPL_TC_DsLogAdmin_QoSType_1 's'
#define TC_IMPL_TC_DsLogAdmin_QoSType_2 'L'
#define TC_IMPL_TC_DsLogAdmin_QoSType_3 'o'
#define TC_IMPL_TC_DsLogAdmin_QoSType_4 'g'
#define TC_IMPL_TC_DsLogAdmin_QoSType_5 'A'
#define TC_IMPL_TC_DsLogAdmin_QoSType_6 'd'
#define TC_IMPL_TC_DsLogAdmin_QoSType_7 'm'
#define TC_IMPL_TC_DsLogAdmin_QoSType_8 'i'
#define TC_IMPL_TC_DsLogAdmin_QoSType_9 'n'
#ifdef ORBIT_IDL_C_IMODULE_DsLogAdmin
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_DsLogAdmin_QoSType_struct;
#define TC_DsLogAdmin_QoSType ((CORBA_TypeCode)&TC_DsLogAdmin_QoSType_struct)
#endif
#define DsLogAdmin_QoSType__alloc() ((DsLogAdmin_QoSType *)ORBit_small_alloc (TC_CORBA_unsigned_short))
#define DsLogAdmin_QoSType__freekids(m,d) ORBit_small_freekids (TC_CORBA_unsigned_short,(m),(d))
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_CORBA_unsigned_short)
#define ORBIT_DECL_CORBA_sequence_CORBA_unsigned_short 1
#define ORBIT_IMPL_CORBA_sequence_CORBA_unsigned_short_0 'D'
#define ORBIT_IMPL_CORBA_sequence_CORBA_unsigned_short_1 's'
#define ORBIT_IMPL_CORBA_sequence_CORBA_unsigned_short_2 'L'
#define ORBIT_IMPL_CORBA_sequence_CORBA_unsigned_short_3 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_unsigned_short_4 'g'
#define ORBIT_IMPL_CORBA_sequence_CORBA_unsigned_short_5 'A'
#define ORBIT_IMPL_CORBA_sequence_CORBA_unsigned_short_6 'd'
#define ORBIT_IMPL_CORBA_sequence_CORBA_unsigned_short_7 'm'
#define ORBIT_IMPL_CORBA_sequence_CORBA_unsigned_short_8 'i'
#define ORBIT_IMPL_CORBA_sequence_CORBA_unsigned_short_9 'n'
#if !defined(_CORBA_sequence_CORBA_unsigned_short_defined)
#define _CORBA_sequence_CORBA_unsigned_short_defined 1
typedef struct { CORBA_unsigned_long _maximum, _length; CORBA_unsigned_short* _buffer; CORBA_boolean _release; } CORBA_sequence_CORBA_unsigned_short;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_CORBA_unsigned_short_0)
#define TC_IMPL_TC_CORBA_sequence_CORBA_unsigned_short_0 'D'
#define TC_IMPL_TC_CORBA_sequence_CORBA_unsigned_short_1 's'
#define TC_IMPL_TC_CORBA_sequence_CORBA_unsigned_short_2 'L'
#define TC_IMPL_TC_CORBA_sequence_CORBA_unsigned_short_3 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_unsigned_short_4 'g'
#define TC_IMPL_TC_CORBA_sequence_CORBA_unsigned_short_5 'A'
#define TC_IMPL_TC_CORBA_sequence_CORBA_unsigned_short_6 'd'
#define TC_IMPL_TC_CORBA_sequence_CORBA_unsigned_short_7 'm'
#define TC_IMPL_TC_CORBA_sequence_CORBA_unsigned_short_8 'i'
#define TC_IMPL_TC_CORBA_sequence_CORBA_unsigned_short_9 'n'
#ifdef ORBIT_IDL_C_IMODULE_DsLogAdmin
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_CORBA_sequence_CORBA_unsigned_short_struct;
#define TC_CORBA_sequence_CORBA_unsigned_short ((CORBA_TypeCode)&TC_CORBA_sequence_CORBA_unsigned_short_struct)
#endif
#define CORBA_sequence_CORBA_unsigned_short__alloc() ((CORBA_sequence_CORBA_unsigned_short *)ORBit_small_alloc (TC_CORBA_sequence_CORBA_unsigned_short))
#define CORBA_sequence_CORBA_unsigned_short__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_CORBA_unsigned_short,(m),(d))
#define CORBA_sequence_CORBA_unsigned_short_allocbuf(l) ((CORBA_unsigned_short*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_unsigned_short, (l)))
#define CORBA_sequence_CORBA_unsigned_short_allocbuf(l) ((CORBA_unsigned_short*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_unsigned_short, (l)))
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_DsLogAdmin_QoSType)
#define ORBIT_DECL_CORBA_sequence_DsLogAdmin_QoSType 1
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_QoSType_0 'D'
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_QoSType_1 's'
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_QoSType_2 'L'
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_QoSType_3 'o'
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_QoSType_4 'g'
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_QoSType_5 'A'
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_QoSType_6 'd'
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_QoSType_7 'm'
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_QoSType_8 'i'
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_QoSType_9 'n'
#if !defined(_CORBA_sequence_DsLogAdmin_QoSType_defined)
#define _CORBA_sequence_DsLogAdmin_QoSType_defined 1
typedef CORBA_sequence_CORBA_unsigned_short CORBA_sequence_DsLogAdmin_QoSType;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_DsLogAdmin_QoSType_0)
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_QoSType_0 'D'
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_QoSType_1 's'
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_QoSType_2 'L'
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_QoSType_3 'o'
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_QoSType_4 'g'
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_QoSType_5 'A'
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_QoSType_6 'd'
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_QoSType_7 'm'
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_QoSType_8 'i'
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_QoSType_9 'n'
#ifdef ORBIT_IDL_C_IMODULE_DsLogAdmin
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_CORBA_sequence_DsLogAdmin_QoSType_struct;
#define TC_CORBA_sequence_DsLogAdmin_QoSType ((CORBA_TypeCode)&TC_CORBA_sequence_DsLogAdmin_QoSType_struct)
#endif
#define CORBA_sequence_DsLogAdmin_QoSType__alloc CORBA_sequence_CORBA_unsigned_short__alloc
#define CORBA_sequence_DsLogAdmin_QoSType__freekids CORBA_sequence_CORBA_unsigned_short__freekids
#define CORBA_sequence_DsLogAdmin_QoSType_allocbuf CORBA_sequence_CORBA_unsigned_short_allocbuf
#define CORBA_sequence_DsLogAdmin_QoSType_marshal(x,y,z) CORBA_sequence_CORBA_unsigned_short_marshal((x),(y),(z))
#define CORBA_sequence_DsLogAdmin_QoSType_demarshal(x,y,z,i) CORBA_sequence_CORBA_unsigned_short_demarshal((x),(y),(z),(i))
#endif
#if !defined(_DsLogAdmin_QoSList_defined)
#define _DsLogAdmin_QoSList_defined 1
typedef CORBA_sequence_DsLogAdmin_QoSType DsLogAdmin_QoSList;
#define DsLogAdmin_QoSList_marshal(x,y,z) CORBA_sequence_DsLogAdmin_QoSType_marshal((x),(y),(z))
#define DsLogAdmin_QoSList_demarshal(x,y,z,i) CORBA_sequence_DsLogAdmin_QoSType_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_DsLogAdmin_QoSList_0)
#define TC_IMPL_TC_DsLogAdmin_QoSList_0 'D'
#define TC_IMPL_TC_DsLogAdmin_QoSList_1 's'
#define TC_IMPL_TC_DsLogAdmin_QoSList_2 'L'
#define TC_IMPL_TC_DsLogAdmin_QoSList_3 'o'
#define TC_IMPL_TC_DsLogAdmin_QoSList_4 'g'
#define TC_IMPL_TC_DsLogAdmin_QoSList_5 'A'
#define TC_IMPL_TC_DsLogAdmin_QoSList_6 'd'
#define TC_IMPL_TC_DsLogAdmin_QoSList_7 'm'
#define TC_IMPL_TC_DsLogAdmin_QoSList_8 'i'
#define TC_IMPL_TC_DsLogAdmin_QoSList_9 'n'
#ifdef ORBIT_IDL_C_IMODULE_DsLogAdmin
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_DsLogAdmin_QoSList_struct;
#define TC_DsLogAdmin_QoSList ((CORBA_TypeCode)&TC_DsLogAdmin_QoSList_struct)
#endif
#define DsLogAdmin_QoSList__alloc() ((DsLogAdmin_QoSList *)ORBit_small_alloc (TC_CORBA_sequence_DsLogAdmin_QoSType))
#define DsLogAdmin_QoSList__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_DsLogAdmin_QoSType,(m),(d))
#define DsLogAdmin_QoSList_allocbuf(l) ((DsLogAdmin_QoSType*)ORBit_small_allocbuf (TC_CORBA_sequence_DsLogAdmin_QoSType, (l)))
#endif
#undef ex_DsLogAdmin_UnsupportedQoS
#define ex_DsLogAdmin_UnsupportedQoS "IDL:omg.org/DsLogAdmin/UnsupportedQoS:1.0"
#if !defined(_DsLogAdmin_UnsupportedQoS_defined)
#define _DsLogAdmin_UnsupportedQoS_defined 1
typedef struct DsLogAdmin_UnsupportedQoS_type DsLogAdmin_UnsupportedQoS;
struct DsLogAdmin_UnsupportedQoS_type {
DsLogAdmin_QoSList denied;
};

#if !defined(TC_IMPL_TC_DsLogAdmin_UnsupportedQoS_0)
#define TC_IMPL_TC_DsLogAdmin_UnsupportedQoS_0 'D'
#define TC_IMPL_TC_DsLogAdmin_UnsupportedQoS_1 's'
#define TC_IMPL_TC_DsLogAdmin_UnsupportedQoS_2 'L'
#define TC_IMPL_TC_DsLogAdmin_UnsupportedQoS_3 'o'
#define TC_IMPL_TC_DsLogAdmin_UnsupportedQoS_4 'g'
#define TC_IMPL_TC_DsLogAdmin_UnsupportedQoS_5 'A'
#define TC_IMPL_TC_DsLogAdmin_UnsupportedQoS_6 'd'
#define TC_IMPL_TC_DsLogAdmin_UnsupportedQoS_7 'm'
#define TC_IMPL_TC_DsLogAdmin_UnsupportedQoS_8 'i'
#define TC_IMPL_TC_DsLogAdmin_UnsupportedQoS_9 'n'
#ifdef ORBIT_IDL_C_IMODULE_DsLogAdmin
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_DsLogAdmin_UnsupportedQoS_struct;
#define TC_DsLogAdmin_UnsupportedQoS ((CORBA_TypeCode)&TC_DsLogAdmin_UnsupportedQoS_struct)
#endif
#define DsLogAdmin_UnsupportedQoS__alloc() ((DsLogAdmin_UnsupportedQoS *)ORBit_small_alloc (TC_DsLogAdmin_UnsupportedQoS))
#define DsLogAdmin_UnsupportedQoS__freekids(m,d) ORBit_small_freekids (TC_DsLogAdmin_UnsupportedQoS,(m),(d))
#endif
#ifndef DsLogAdmin_QoSNone
#define DsLogAdmin_QoSNone 0U
#endif /* !DsLogAdmin_QoSNone */

#ifndef DsLogAdmin_QoSFlush
#define DsLogAdmin_QoSFlush 1U
#endif /* !DsLogAdmin_QoSFlush */

#ifndef DsLogAdmin_QoSReliability
#define DsLogAdmin_QoSReliability 2U
#endif /* !DsLogAdmin_QoSReliability */

#if !defined(ORBIT_DECL_DsLogAdmin_Log) && !defined(_DsLogAdmin_Log_defined)
#define ORBIT_DECL_DsLogAdmin_Log 1
#define _DsLogAdmin_Log_defined 1
#define DsLogAdmin_Log__freekids CORBA_Object__freekids
typedef CORBA_Object DsLogAdmin_Log;
extern CORBA_unsigned_long DsLogAdmin_Log__classid;
#if !defined(TC_IMPL_TC_DsLogAdmin_Log_0)
#define TC_IMPL_TC_DsLogAdmin_Log_0 'D'
#define TC_IMPL_TC_DsLogAdmin_Log_1 's'
#define TC_IMPL_TC_DsLogAdmin_Log_2 'L'
#define TC_IMPL_TC_DsLogAdmin_Log_3 'o'
#define TC_IMPL_TC_DsLogAdmin_Log_4 'g'
#define TC_IMPL_TC_DsLogAdmin_Log_5 'A'
#define TC_IMPL_TC_DsLogAdmin_Log_6 'd'
#define TC_IMPL_TC_DsLogAdmin_Log_7 'm'
#define TC_IMPL_TC_DsLogAdmin_Log_8 'i'
#define TC_IMPL_TC_DsLogAdmin_Log_9 'n'
#ifdef ORBIT_IDL_C_IMODULE_DsLogAdmin
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_DsLogAdmin_Log_struct;
#define TC_DsLogAdmin_Log ((CORBA_TypeCode)&TC_DsLogAdmin_Log_struct)
#endif
#endif
#if !defined(ORBIT_DECL_DsLogAdmin_BasicLog) && !defined(_DsLogAdmin_BasicLog_defined)
#define ORBIT_DECL_DsLogAdmin_BasicLog 1
#define _DsLogAdmin_BasicLog_defined 1
#define DsLogAdmin_BasicLog__freekids CORBA_Object__freekids
typedef CORBA_Object DsLogAdmin_BasicLog;
extern CORBA_unsigned_long DsLogAdmin_BasicLog__classid;
#if !defined(TC_IMPL_TC_DsLogAdmin_BasicLog_0)
#define TC_IMPL_TC_DsLogAdmin_BasicLog_0 'D'
#define TC_IMPL_TC_DsLogAdmin_BasicLog_1 's'
#define TC_IMPL_TC_DsLogAdmin_BasicLog_2 'L'
#define TC_IMPL_TC_DsLogAdmin_BasicLog_3 'o'
#define TC_IMPL_TC_DsLogAdmin_BasicLog_4 'g'
#define TC_IMPL_TC_DsLogAdmin_BasicLog_5 'A'
#define TC_IMPL_TC_DsLogAdmin_BasicLog_6 'd'
#define TC_IMPL_TC_DsLogAdmin_BasicLog_7 'm'
#define TC_IMPL_TC_DsLogAdmin_BasicLog_8 'i'
#define TC_IMPL_TC_DsLogAdmin_BasicLog_9 'n'
#ifdef ORBIT_IDL_C_IMODULE_DsLogAdmin
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_DsLogAdmin_BasicLog_struct;
#define TC_DsLogAdmin_BasicLog ((CORBA_TypeCode)&TC_DsLogAdmin_BasicLog_struct)
#endif
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_CORBA_Object)
#define ORBIT_DECL_CORBA_sequence_CORBA_Object 1
#define ORBIT_IMPL_CORBA_sequence_CORBA_Object_0 'D'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Object_1 's'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Object_2 'L'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Object_3 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Object_4 'g'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Object_5 'A'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Object_6 'd'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Object_7 'm'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Object_8 'i'
#define ORBIT_IMPL_CORBA_sequence_CORBA_Object_9 'n'
#if !defined(_CORBA_sequence_CORBA_Object_defined)
#define _CORBA_sequence_CORBA_Object_defined 1
typedef struct { CORBA_unsigned_long _maximum, _length; CORBA_Object* _buffer; CORBA_boolean _release; } CORBA_sequence_CORBA_Object;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_CORBA_Object_0)
#define TC_IMPL_TC_CORBA_sequence_CORBA_Object_0 'D'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Object_1 's'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Object_2 'L'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Object_3 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Object_4 'g'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Object_5 'A'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Object_6 'd'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Object_7 'm'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Object_8 'i'
#define TC_IMPL_TC_CORBA_sequence_CORBA_Object_9 'n'
#ifdef ORBIT_IDL_C_IMODULE_DsLogAdmin
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_CORBA_sequence_CORBA_Object_struct;
#define TC_CORBA_sequence_CORBA_Object ((CORBA_TypeCode)&TC_CORBA_sequence_CORBA_Object_struct)
#endif
#define CORBA_sequence_CORBA_Object__alloc() ((CORBA_sequence_CORBA_Object *)ORBit_small_alloc (TC_CORBA_sequence_CORBA_Object))
#define CORBA_sequence_CORBA_Object__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_CORBA_Object,(m),(d))
#define CORBA_sequence_CORBA_Object_allocbuf(l) ((CORBA_Object*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_Object, (l)))
#define CORBA_sequence_CORBA_Object_allocbuf(l) ((CORBA_Object*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_Object, (l)))
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_DsLogAdmin_Log)
#define ORBIT_DECL_CORBA_sequence_DsLogAdmin_Log 1
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_Log_0 'D'
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_Log_1 's'
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_Log_2 'L'
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_Log_3 'o'
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_Log_4 'g'
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_Log_5 'A'
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_Log_6 'd'
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_Log_7 'm'
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_Log_8 'i'
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_Log_9 'n'
#if !defined(_CORBA_sequence_DsLogAdmin_Log_defined)
#define _CORBA_sequence_DsLogAdmin_Log_defined 1
typedef CORBA_sequence_CORBA_Object CORBA_sequence_DsLogAdmin_Log;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_DsLogAdmin_Log_0)
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_Log_0 'D'
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_Log_1 's'
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_Log_2 'L'
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_Log_3 'o'
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_Log_4 'g'
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_Log_5 'A'
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_Log_6 'd'
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_Log_7 'm'
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_Log_8 'i'
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_Log_9 'n'
#ifdef ORBIT_IDL_C_IMODULE_DsLogAdmin
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_CORBA_sequence_DsLogAdmin_Log_struct;
#define TC_CORBA_sequence_DsLogAdmin_Log ((CORBA_TypeCode)&TC_CORBA_sequence_DsLogAdmin_Log_struct)
#endif
#define CORBA_sequence_DsLogAdmin_Log__alloc CORBA_sequence_CORBA_Object__alloc
#define CORBA_sequence_DsLogAdmin_Log__freekids CORBA_sequence_CORBA_Object__freekids
#define CORBA_sequence_DsLogAdmin_Log_allocbuf CORBA_sequence_CORBA_Object_allocbuf
#define CORBA_sequence_DsLogAdmin_Log_marshal(x,y,z) CORBA_sequence_CORBA_Object_marshal((x),(y),(z))
#define CORBA_sequence_DsLogAdmin_Log_demarshal(x,y,z,i) CORBA_sequence_CORBA_Object_demarshal((x),(y),(z),(i))
#endif
#if !defined(_DsLogAdmin_LogList_defined)
#define _DsLogAdmin_LogList_defined 1
typedef CORBA_sequence_DsLogAdmin_Log DsLogAdmin_LogList;
#define DsLogAdmin_LogList_marshal(x,y,z) CORBA_sequence_DsLogAdmin_Log_marshal((x),(y),(z))
#define DsLogAdmin_LogList_demarshal(x,y,z,i) CORBA_sequence_DsLogAdmin_Log_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_DsLogAdmin_LogList_0)
#define TC_IMPL_TC_DsLogAdmin_LogList_0 'D'
#define TC_IMPL_TC_DsLogAdmin_LogList_1 's'
#define TC_IMPL_TC_DsLogAdmin_LogList_2 'L'
#define TC_IMPL_TC_DsLogAdmin_LogList_3 'o'
#define TC_IMPL_TC_DsLogAdmin_LogList_4 'g'
#define TC_IMPL_TC_DsLogAdmin_LogList_5 'A'
#define TC_IMPL_TC_DsLogAdmin_LogList_6 'd'
#define TC_IMPL_TC_DsLogAdmin_LogList_7 'm'
#define TC_IMPL_TC_DsLogAdmin_LogList_8 'i'
#define TC_IMPL_TC_DsLogAdmin_LogList_9 'n'
#ifdef ORBIT_IDL_C_IMODULE_DsLogAdmin
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_DsLogAdmin_LogList_struct;
#define TC_DsLogAdmin_LogList ((CORBA_TypeCode)&TC_DsLogAdmin_LogList_struct)
#endif
#define DsLogAdmin_LogList__alloc() ((DsLogAdmin_LogList *)ORBit_small_alloc (TC_CORBA_sequence_DsLogAdmin_Log))
#define DsLogAdmin_LogList__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_DsLogAdmin_Log,(m),(d))
#define DsLogAdmin_LogList_allocbuf(l) ((DsLogAdmin_Log*)ORBit_small_allocbuf (TC_CORBA_sequence_DsLogAdmin_Log, (l)))
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_CORBA_unsigned_long)
#define ORBIT_DECL_CORBA_sequence_CORBA_unsigned_long 1
#define ORBIT_IMPL_CORBA_sequence_CORBA_unsigned_long_0 'D'
#define ORBIT_IMPL_CORBA_sequence_CORBA_unsigned_long_1 's'
#define ORBIT_IMPL_CORBA_sequence_CORBA_unsigned_long_2 'L'
#define ORBIT_IMPL_CORBA_sequence_CORBA_unsigned_long_3 'o'
#define ORBIT_IMPL_CORBA_sequence_CORBA_unsigned_long_4 'g'
#define ORBIT_IMPL_CORBA_sequence_CORBA_unsigned_long_5 'A'
#define ORBIT_IMPL_CORBA_sequence_CORBA_unsigned_long_6 'd'
#define ORBIT_IMPL_CORBA_sequence_CORBA_unsigned_long_7 'm'
#define ORBIT_IMPL_CORBA_sequence_CORBA_unsigned_long_8 'i'
#define ORBIT_IMPL_CORBA_sequence_CORBA_unsigned_long_9 'n'
#if !defined(_CORBA_sequence_CORBA_unsigned_long_defined)
#define _CORBA_sequence_CORBA_unsigned_long_defined 1
typedef struct { CORBA_unsigned_long _maximum, _length; CORBA_unsigned_long* _buffer; CORBA_boolean _release; } CORBA_sequence_CORBA_unsigned_long;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_CORBA_unsigned_long_0)
#define TC_IMPL_TC_CORBA_sequence_CORBA_unsigned_long_0 'D'
#define TC_IMPL_TC_CORBA_sequence_CORBA_unsigned_long_1 's'
#define TC_IMPL_TC_CORBA_sequence_CORBA_unsigned_long_2 'L'
#define TC_IMPL_TC_CORBA_sequence_CORBA_unsigned_long_3 'o'
#define TC_IMPL_TC_CORBA_sequence_CORBA_unsigned_long_4 'g'
#define TC_IMPL_TC_CORBA_sequence_CORBA_unsigned_long_5 'A'
#define TC_IMPL_TC_CORBA_sequence_CORBA_unsigned_long_6 'd'
#define TC_IMPL_TC_CORBA_sequence_CORBA_unsigned_long_7 'm'
#define TC_IMPL_TC_CORBA_sequence_CORBA_unsigned_long_8 'i'
#define TC_IMPL_TC_CORBA_sequence_CORBA_unsigned_long_9 'n'
#ifdef ORBIT_IDL_C_IMODULE_DsLogAdmin
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_CORBA_sequence_CORBA_unsigned_long_struct;
#define TC_CORBA_sequence_CORBA_unsigned_long ((CORBA_TypeCode)&TC_CORBA_sequence_CORBA_unsigned_long_struct)
#endif
#define CORBA_sequence_CORBA_unsigned_long__alloc() ((CORBA_sequence_CORBA_unsigned_long *)ORBit_small_alloc (TC_CORBA_sequence_CORBA_unsigned_long))
#define CORBA_sequence_CORBA_unsigned_long__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_CORBA_unsigned_long,(m),(d))
#define CORBA_sequence_CORBA_unsigned_long_allocbuf(l) ((CORBA_unsigned_long*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_unsigned_long, (l)))
#define CORBA_sequence_CORBA_unsigned_long_allocbuf(l) ((CORBA_unsigned_long*)ORBit_small_allocbuf (TC_CORBA_sequence_CORBA_unsigned_long, (l)))
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_DsLogAdmin_LogId)
#define ORBIT_DECL_CORBA_sequence_DsLogAdmin_LogId 1
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_LogId_0 'D'
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_LogId_1 's'
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_LogId_2 'L'
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_LogId_3 'o'
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_LogId_4 'g'
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_LogId_5 'A'
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_LogId_6 'd'
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_LogId_7 'm'
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_LogId_8 'i'
#define ORBIT_IMPL_CORBA_sequence_DsLogAdmin_LogId_9 'n'
#if !defined(_CORBA_sequence_DsLogAdmin_LogId_defined)
#define _CORBA_sequence_DsLogAdmin_LogId_defined 1
typedef CORBA_sequence_CORBA_unsigned_long CORBA_sequence_DsLogAdmin_LogId;
#endif
#if !defined(TC_IMPL_TC_CORBA_sequence_DsLogAdmin_LogId_0)
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_LogId_0 'D'
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_LogId_1 's'
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_LogId_2 'L'
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_LogId_3 'o'
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_LogId_4 'g'
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_LogId_5 'A'
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_LogId_6 'd'
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_LogId_7 'm'
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_LogId_8 'i'
#define TC_IMPL_TC_CORBA_sequence_DsLogAdmin_LogId_9 'n'
#ifdef ORBIT_IDL_C_IMODULE_DsLogAdmin
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_CORBA_sequence_DsLogAdmin_LogId_struct;
#define TC_CORBA_sequence_DsLogAdmin_LogId ((CORBA_TypeCode)&TC_CORBA_sequence_DsLogAdmin_LogId_struct)
#endif
#define CORBA_sequence_DsLogAdmin_LogId__alloc CORBA_sequence_CORBA_unsigned_long__alloc
#define CORBA_sequence_DsLogAdmin_LogId__freekids CORBA_sequence_CORBA_unsigned_long__freekids
#define CORBA_sequence_DsLogAdmin_LogId_allocbuf CORBA_sequence_CORBA_unsigned_long_allocbuf
#define CORBA_sequence_DsLogAdmin_LogId_marshal(x,y,z) CORBA_sequence_CORBA_unsigned_long_marshal((x),(y),(z))
#define CORBA_sequence_DsLogAdmin_LogId_demarshal(x,y,z,i) CORBA_sequence_CORBA_unsigned_long_demarshal((x),(y),(z),(i))
#endif
#if !defined(_DsLogAdmin_LogIdList_defined)
#define _DsLogAdmin_LogIdList_defined 1
typedef CORBA_sequence_DsLogAdmin_LogId DsLogAdmin_LogIdList;
#define DsLogAdmin_LogIdList_marshal(x,y,z) CORBA_sequence_DsLogAdmin_LogId_marshal((x),(y),(z))
#define DsLogAdmin_LogIdList_demarshal(x,y,z,i) CORBA_sequence_DsLogAdmin_LogId_demarshal((x),(y),(z),(i))
#if !defined(TC_IMPL_TC_DsLogAdmin_LogIdList_0)
#define TC_IMPL_TC_DsLogAdmin_LogIdList_0 'D'
#define TC_IMPL_TC_DsLogAdmin_LogIdList_1 's'
#define TC_IMPL_TC_DsLogAdmin_LogIdList_2 'L'
#define TC_IMPL_TC_DsLogAdmin_LogIdList_3 'o'
#define TC_IMPL_TC_DsLogAdmin_LogIdList_4 'g'
#define TC_IMPL_TC_DsLogAdmin_LogIdList_5 'A'
#define TC_IMPL_TC_DsLogAdmin_LogIdList_6 'd'
#define TC_IMPL_TC_DsLogAdmin_LogIdList_7 'm'
#define TC_IMPL_TC_DsLogAdmin_LogIdList_8 'i'
#define TC_IMPL_TC_DsLogAdmin_LogIdList_9 'n'
#ifdef ORBIT_IDL_C_IMODULE_DsLogAdmin
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_DsLogAdmin_LogIdList_struct;
#define TC_DsLogAdmin_LogIdList ((CORBA_TypeCode)&TC_DsLogAdmin_LogIdList_struct)
#endif
#define DsLogAdmin_LogIdList__alloc() ((DsLogAdmin_LogIdList *)ORBit_small_alloc (TC_CORBA_sequence_DsLogAdmin_LogId))
#define DsLogAdmin_LogIdList__freekids(m,d) ORBit_small_freekids (TC_CORBA_sequence_DsLogAdmin_LogId,(m),(d))
#define DsLogAdmin_LogIdList_allocbuf(l) ((DsLogAdmin_LogId*)ORBit_small_allocbuf (TC_CORBA_sequence_DsLogAdmin_LogId, (l)))
#endif
#if !defined(ORBIT_DECL_DsLogAdmin_LogMgr) && !defined(_DsLogAdmin_LogMgr_defined)
#define ORBIT_DECL_DsLogAdmin_LogMgr 1
#define _DsLogAdmin_LogMgr_defined 1
#define DsLogAdmin_LogMgr__freekids CORBA_Object__freekids
typedef CORBA_Object DsLogAdmin_LogMgr;
extern CORBA_unsigned_long DsLogAdmin_LogMgr__classid;
#if !defined(TC_IMPL_TC_DsLogAdmin_LogMgr_0)
#define TC_IMPL_TC_DsLogAdmin_LogMgr_0 'D'
#define TC_IMPL_TC_DsLogAdmin_LogMgr_1 's'
#define TC_IMPL_TC_DsLogAdmin_LogMgr_2 'L'
#define TC_IMPL_TC_DsLogAdmin_LogMgr_3 'o'
#define TC_IMPL_TC_DsLogAdmin_LogMgr_4 'g'
#define TC_IMPL_TC_DsLogAdmin_LogMgr_5 'A'
#define TC_IMPL_TC_DsLogAdmin_LogMgr_6 'd'
#define TC_IMPL_TC_DsLogAdmin_LogMgr_7 'm'
#define TC_IMPL_TC_DsLogAdmin_LogMgr_8 'i'
#define TC_IMPL_TC_DsLogAdmin_LogMgr_9 'n'
#ifdef ORBIT_IDL_C_IMODULE_DsLogAdmin
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_DsLogAdmin_LogMgr_struct;
#define TC_DsLogAdmin_LogMgr ((CORBA_TypeCode)&TC_DsLogAdmin_LogMgr_struct)
#endif
#endif
#if !defined(ORBIT_DECL_DsLogAdmin_BasicLogFactory) && !defined(_DsLogAdmin_BasicLogFactory_defined)
#define ORBIT_DECL_DsLogAdmin_BasicLogFactory 1
#define _DsLogAdmin_BasicLogFactory_defined 1
#define DsLogAdmin_BasicLogFactory__freekids CORBA_Object__freekids
typedef CORBA_Object DsLogAdmin_BasicLogFactory;
extern CORBA_unsigned_long DsLogAdmin_BasicLogFactory__classid;
#if !defined(TC_IMPL_TC_DsLogAdmin_BasicLogFactory_0)
#define TC_IMPL_TC_DsLogAdmin_BasicLogFactory_0 'D'
#define TC_IMPL_TC_DsLogAdmin_BasicLogFactory_1 's'
#define TC_IMPL_TC_DsLogAdmin_BasicLogFactory_2 'L'
#define TC_IMPL_TC_DsLogAdmin_BasicLogFactory_3 'o'
#define TC_IMPL_TC_DsLogAdmin_BasicLogFactory_4 'g'
#define TC_IMPL_TC_DsLogAdmin_BasicLogFactory_5 'A'
#define TC_IMPL_TC_DsLogAdmin_BasicLogFactory_6 'd'
#define TC_IMPL_TC_DsLogAdmin_BasicLogFactory_7 'm'
#define TC_IMPL_TC_DsLogAdmin_BasicLogFactory_8 'i'
#define TC_IMPL_TC_DsLogAdmin_BasicLogFactory_9 'n'
#ifdef ORBIT_IDL_C_IMODULE_DsLogAdmin
static
#else
extern
#endif
ORBIT2_MAYBE_CONST struct CORBA_TypeCode_struct TC_DsLogAdmin_BasicLogFactory_struct;
#define TC_DsLogAdmin_BasicLogFactory ((CORBA_TypeCode)&TC_DsLogAdmin_BasicLogFactory_struct)
#endif
#endif

/** POA structures **/
#ifndef _defined_POA_DsLogAdmin_Iterator
#define _defined_POA_DsLogAdmin_Iterator 1
typedef struct {
  void *_private;
DsLogAdmin_RecordList* (*get)(PortableServer_Servant _servant, const CORBA_unsigned_long position, const CORBA_unsigned_long how_many, CORBA_Environment *ev);
void (*destroy)(PortableServer_Servant _servant, CORBA_Environment *ev);
} POA_DsLogAdmin_Iterator__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_DsLogAdmin_Iterator__epv *DsLogAdmin_Iterator_epv;
} POA_DsLogAdmin_Iterator__vepv;
typedef struct {
  void *_private;
  POA_DsLogAdmin_Iterator__vepv *vepv;
} POA_DsLogAdmin_Iterator;
extern void POA_DsLogAdmin_Iterator__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_DsLogAdmin_Iterator__fini(PortableServer_Servant servant, CORBA_Environment *ev);
#endif /* _defined_POA_DsLogAdmin_Iterator */
#ifndef _defined_POA_DsLogAdmin_Log
#define _defined_POA_DsLogAdmin_Log 1
typedef struct {
  void *_private;
DsLogAdmin_LogMgr (*my_factory)(PortableServer_Servant _servant, CORBA_Environment *ev);
DsLogAdmin_LogId (*id)(PortableServer_Servant _servant, CORBA_Environment *ev);
DsLogAdmin_QoSList* (*get_log_qos)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*set_log_qos)(PortableServer_Servant _servant, const DsLogAdmin_QoSList* qos, CORBA_Environment *ev);
CORBA_unsigned_long (*get_max_record_life)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*set_max_record_life)(PortableServer_Servant _servant, const CORBA_unsigned_long life, CORBA_Environment *ev);
CORBA_unsigned_long_long (*get_max_size)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*set_max_size)(PortableServer_Servant _servant, const CORBA_unsigned_long_long size, CORBA_Environment *ev);
CORBA_unsigned_long_long (*get_current_size)(PortableServer_Servant _servant, CORBA_Environment *ev);
CORBA_unsigned_long_long (*get_n_records)(PortableServer_Servant _servant, CORBA_Environment *ev);
DsLogAdmin_LogFullActionType (*get_log_full_action)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*set_log_full_action)(PortableServer_Servant _servant, const DsLogAdmin_LogFullActionType action, CORBA_Environment *ev);
DsLogAdmin_AdministrativeState (*get_administrative_state)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*set_administrative_state)(PortableServer_Servant _servant, const DsLogAdmin_AdministrativeState state, CORBA_Environment *ev);
DsLogAdmin_ForwardingState (*get_forwarding_state)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*set_forwarding_state)(PortableServer_Servant _servant, const DsLogAdmin_ForwardingState state, CORBA_Environment *ev);
DsLogAdmin_OperationalState (*get_operational_state)(PortableServer_Servant _servant, CORBA_Environment *ev);
DsLogAdmin_TimeInterval (*get_interval)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*set_interval)(PortableServer_Servant _servant, const DsLogAdmin_TimeInterval* interval, CORBA_Environment *ev);
DsLogAdmin_AvailabilityStatus (*get_availability_status)(PortableServer_Servant _servant, CORBA_Environment *ev);
DsLogAdmin_CapacityAlarmThresholdList* (*get_capacity_alarm_thresholds)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*set_capacity_alarm_thresholds)(PortableServer_Servant _servant, const DsLogAdmin_CapacityAlarmThresholdList* threshs, CORBA_Environment *ev);
DsLogAdmin_WeekMask* (*get_week_mask)(PortableServer_Servant _servant, CORBA_Environment *ev);
void (*set_week_mask)(PortableServer_Servant _servant, const DsLogAdmin_WeekMask* masks, CORBA_Environment *ev);
DsLogAdmin_RecordList* (*query)(PortableServer_Servant _servant, const CORBA_char * grammar, const CORBA_char * c, DsLogAdmin_Iterator* i, CORBA_Environment *ev);
DsLogAdmin_RecordList* (*retrieve)(PortableServer_Servant _servant, const DsLogAdmin_TimeT from_time, const CORBA_long how_many, DsLogAdmin_Iterator* i, CORBA_Environment *ev);
CORBA_unsigned_long (*match)(PortableServer_Servant _servant, const CORBA_char * grammar, const CORBA_char * c, CORBA_Environment *ev);
CORBA_unsigned_long (*delete_records)(PortableServer_Servant _servant, const CORBA_char * grammar, const CORBA_char * c, CORBA_Environment *ev);
CORBA_unsigned_long (*delete_records_by_id)(PortableServer_Servant _servant, const DsLogAdmin_RecordIdList* ids, CORBA_Environment *ev);
void (*write_records)(PortableServer_Servant _servant, const DsLogAdmin_Anys* records, CORBA_Environment *ev);
void (*write_recordlist)(PortableServer_Servant _servant, const DsLogAdmin_RecordList* list, CORBA_Environment *ev);
void (*set_record_attribute)(PortableServer_Servant _servant, const DsLogAdmin_RecordId id, const DsLogAdmin_NVList* attr_list, CORBA_Environment *ev);
CORBA_unsigned_long (*set_records_attribute)(PortableServer_Servant _servant, const CORBA_char * grammar, const CORBA_char * c, const DsLogAdmin_NVList* attr_list, CORBA_Environment *ev);
DsLogAdmin_NVList* (*get_record_attribute)(PortableServer_Servant _servant, const DsLogAdmin_RecordId id, CORBA_Environment *ev);
DsLogAdmin_Log (*copy)(PortableServer_Servant _servant, DsLogAdmin_LogId* id, CORBA_Environment *ev);
DsLogAdmin_Log (*copy_with_id)(PortableServer_Servant _servant, const DsLogAdmin_LogId id, CORBA_Environment *ev);
void (*flush)(PortableServer_Servant _servant, CORBA_Environment *ev);
} POA_DsLogAdmin_Log__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_DsLogAdmin_Log__epv *DsLogAdmin_Log_epv;
} POA_DsLogAdmin_Log__vepv;
typedef struct {
  void *_private;
  POA_DsLogAdmin_Log__vepv *vepv;
} POA_DsLogAdmin_Log;
extern void POA_DsLogAdmin_Log__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_DsLogAdmin_Log__fini(PortableServer_Servant servant, CORBA_Environment *ev);
#endif /* _defined_POA_DsLogAdmin_Log */
#ifndef _defined_POA_DsLogAdmin_BasicLog
#define _defined_POA_DsLogAdmin_BasicLog 1
typedef struct {
  void *_private;
void (*destroy)(PortableServer_Servant _servant, CORBA_Environment *ev);
} POA_DsLogAdmin_BasicLog__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_DsLogAdmin_Log__epv *DsLogAdmin_Log_epv;
  POA_DsLogAdmin_BasicLog__epv *DsLogAdmin_BasicLog_epv;
} POA_DsLogAdmin_BasicLog__vepv;
typedef struct {
  void *_private;
  POA_DsLogAdmin_BasicLog__vepv *vepv;
} POA_DsLogAdmin_BasicLog;
extern void POA_DsLogAdmin_BasicLog__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_DsLogAdmin_BasicLog__fini(PortableServer_Servant servant, CORBA_Environment *ev);
#endif /* _defined_POA_DsLogAdmin_BasicLog */
#ifndef _defined_POA_DsLogAdmin_LogMgr
#define _defined_POA_DsLogAdmin_LogMgr 1
typedef struct {
  void *_private;
DsLogAdmin_LogList* (*list_logs)(PortableServer_Servant _servant, CORBA_Environment *ev);
DsLogAdmin_Log (*find_log)(PortableServer_Servant _servant, const DsLogAdmin_LogId id, CORBA_Environment *ev);
DsLogAdmin_LogIdList* (*list_logs_by_id)(PortableServer_Servant _servant, CORBA_Environment *ev);
} POA_DsLogAdmin_LogMgr__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_DsLogAdmin_LogMgr__epv *DsLogAdmin_LogMgr_epv;
} POA_DsLogAdmin_LogMgr__vepv;
typedef struct {
  void *_private;
  POA_DsLogAdmin_LogMgr__vepv *vepv;
} POA_DsLogAdmin_LogMgr;
extern void POA_DsLogAdmin_LogMgr__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_DsLogAdmin_LogMgr__fini(PortableServer_Servant servant, CORBA_Environment *ev);
#endif /* _defined_POA_DsLogAdmin_LogMgr */
#ifndef _defined_POA_DsLogAdmin_BasicLogFactory
#define _defined_POA_DsLogAdmin_BasicLogFactory 1
typedef struct {
  void *_private;
DsLogAdmin_BasicLog (*create)(PortableServer_Servant _servant, const DsLogAdmin_LogFullActionType full_action, const CORBA_unsigned_long_long max_size, DsLogAdmin_LogId* id, CORBA_Environment *ev);
DsLogAdmin_BasicLog (*create_with_id)(PortableServer_Servant _servant, const DsLogAdmin_LogId id, const DsLogAdmin_LogFullActionType full_action, const CORBA_unsigned_long_long max_size, CORBA_Environment *ev);
} POA_DsLogAdmin_BasicLogFactory__epv;
typedef struct {
  PortableServer_ServantBase__epv *_base_epv;
  POA_DsLogAdmin_LogMgr__epv *DsLogAdmin_LogMgr_epv;
  POA_DsLogAdmin_BasicLogFactory__epv *DsLogAdmin_BasicLogFactory_epv;
} POA_DsLogAdmin_BasicLogFactory__vepv;
typedef struct {
  void *_private;
  POA_DsLogAdmin_BasicLogFactory__vepv *vepv;
} POA_DsLogAdmin_BasicLogFactory;
extern void POA_DsLogAdmin_BasicLogFactory__init(PortableServer_Servant servant, CORBA_Environment *ev);
extern void POA_DsLogAdmin_BasicLogFactory__fini(PortableServer_Servant servant, CORBA_Environment *ev);
#endif /* _defined_POA_DsLogAdmin_BasicLogFactory */

/** skel prototypes **/
void _ORBIT_skel_small_DsLogAdmin_Iterator_get(POA_DsLogAdmin_Iterator *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, DsLogAdmin_RecordList* (*_impl_get)(PortableServer_Servant _servant, const CORBA_unsigned_long position, const CORBA_unsigned_long how_many, CORBA_Environment *ev));
void _ORBIT_skel_small_DsLogAdmin_Iterator_destroy(POA_DsLogAdmin_Iterator *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_destroy)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_DsLogAdmin_Log_my_factory(POA_DsLogAdmin_Log *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, DsLogAdmin_LogMgr (*_impl_my_factory)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_DsLogAdmin_Log_id(POA_DsLogAdmin_Log *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, DsLogAdmin_LogId (*_impl_id)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_DsLogAdmin_Log_get_log_qos(POA_DsLogAdmin_Log *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, DsLogAdmin_QoSList* (*_impl_get_log_qos)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_DsLogAdmin_Log_set_log_qos(POA_DsLogAdmin_Log *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_set_log_qos)(PortableServer_Servant _servant, const DsLogAdmin_QoSList* qos, CORBA_Environment *ev));
void _ORBIT_skel_small_DsLogAdmin_Log_get_max_record_life(POA_DsLogAdmin_Log *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, CORBA_unsigned_long (*_impl_get_max_record_life)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_DsLogAdmin_Log_set_max_record_life(POA_DsLogAdmin_Log *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_set_max_record_life)(PortableServer_Servant _servant, const CORBA_unsigned_long life, CORBA_Environment *ev));
void _ORBIT_skel_small_DsLogAdmin_Log_get_max_size(POA_DsLogAdmin_Log *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, CORBA_unsigned_long_long (*_impl_get_max_size)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_DsLogAdmin_Log_set_max_size(POA_DsLogAdmin_Log *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_set_max_size)(PortableServer_Servant _servant, const CORBA_unsigned_long_long size, CORBA_Environment *ev));
void _ORBIT_skel_small_DsLogAdmin_Log_get_current_size(POA_DsLogAdmin_Log *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, CORBA_unsigned_long_long (*_impl_get_current_size)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_DsLogAdmin_Log_get_n_records(POA_DsLogAdmin_Log *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, CORBA_unsigned_long_long (*_impl_get_n_records)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_DsLogAdmin_Log_get_log_full_action(POA_DsLogAdmin_Log *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, DsLogAdmin_LogFullActionType (*_impl_get_log_full_action)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_DsLogAdmin_Log_set_log_full_action(POA_DsLogAdmin_Log *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_set_log_full_action)(PortableServer_Servant _servant, const DsLogAdmin_LogFullActionType action, CORBA_Environment *ev));
void _ORBIT_skel_small_DsLogAdmin_Log_get_administrative_state(POA_DsLogAdmin_Log *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, DsLogAdmin_AdministrativeState (*_impl_get_administrative_state)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_DsLogAdmin_Log_set_administrative_state(POA_DsLogAdmin_Log *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_set_administrative_state)(PortableServer_Servant _servant, const DsLogAdmin_AdministrativeState state, CORBA_Environment *ev));
void _ORBIT_skel_small_DsLogAdmin_Log_get_forwarding_state(POA_DsLogAdmin_Log *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, DsLogAdmin_ForwardingState (*_impl_get_forwarding_state)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_DsLogAdmin_Log_set_forwarding_state(POA_DsLogAdmin_Log *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_set_forwarding_state)(PortableServer_Servant _servant, const DsLogAdmin_ForwardingState state, CORBA_Environment *ev));
void _ORBIT_skel_small_DsLogAdmin_Log_get_operational_state(POA_DsLogAdmin_Log *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, DsLogAdmin_OperationalState (*_impl_get_operational_state)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_DsLogAdmin_Log_get_interval(POA_DsLogAdmin_Log *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, DsLogAdmin_TimeInterval (*_impl_get_interval)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_DsLogAdmin_Log_set_interval(POA_DsLogAdmin_Log *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_set_interval)(PortableServer_Servant _servant, const DsLogAdmin_TimeInterval* interval, CORBA_Environment *ev));
void _ORBIT_skel_small_DsLogAdmin_Log_get_availability_status(POA_DsLogAdmin_Log *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, DsLogAdmin_AvailabilityStatus (*_impl_get_availability_status)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_DsLogAdmin_Log_get_capacity_alarm_thresholds(POA_DsLogAdmin_Log *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, DsLogAdmin_CapacityAlarmThresholdList* (*_impl_get_capacity_alarm_thresholds)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_DsLogAdmin_Log_set_capacity_alarm_thresholds(POA_DsLogAdmin_Log *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_set_capacity_alarm_thresholds)(PortableServer_Servant _servant, const DsLogAdmin_CapacityAlarmThresholdList* threshs, CORBA_Environment *ev));
void _ORBIT_skel_small_DsLogAdmin_Log_get_week_mask(POA_DsLogAdmin_Log *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, DsLogAdmin_WeekMask* (*_impl_get_week_mask)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_DsLogAdmin_Log_set_week_mask(POA_DsLogAdmin_Log *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_set_week_mask)(PortableServer_Servant _servant, const DsLogAdmin_WeekMask* masks, CORBA_Environment *ev));
void _ORBIT_skel_small_DsLogAdmin_Log_query(POA_DsLogAdmin_Log *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, DsLogAdmin_RecordList* (*_impl_query)(PortableServer_Servant _servant, const CORBA_char * grammar, const CORBA_char * c, DsLogAdmin_Iterator* i, CORBA_Environment *ev));
void _ORBIT_skel_small_DsLogAdmin_Log_retrieve(POA_DsLogAdmin_Log *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, DsLogAdmin_RecordList* (*_impl_retrieve)(PortableServer_Servant _servant, const DsLogAdmin_TimeT from_time, const CORBA_long how_many, DsLogAdmin_Iterator* i, CORBA_Environment *ev));
void _ORBIT_skel_small_DsLogAdmin_Log_match(POA_DsLogAdmin_Log *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, CORBA_unsigned_long (*_impl_match)(PortableServer_Servant _servant, const CORBA_char * grammar, const CORBA_char * c, CORBA_Environment *ev));
void _ORBIT_skel_small_DsLogAdmin_Log_delete_records(POA_DsLogAdmin_Log *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, CORBA_unsigned_long (*_impl_delete_records)(PortableServer_Servant _servant, const CORBA_char * grammar, const CORBA_char * c, CORBA_Environment *ev));
void _ORBIT_skel_small_DsLogAdmin_Log_delete_records_by_id(POA_DsLogAdmin_Log *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, CORBA_unsigned_long (*_impl_delete_records_by_id)(PortableServer_Servant _servant, const DsLogAdmin_RecordIdList* ids, CORBA_Environment *ev));
void _ORBIT_skel_small_DsLogAdmin_Log_write_records(POA_DsLogAdmin_Log *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_write_records)(PortableServer_Servant _servant, const DsLogAdmin_Anys* records, CORBA_Environment *ev));
void _ORBIT_skel_small_DsLogAdmin_Log_write_recordlist(POA_DsLogAdmin_Log *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_write_recordlist)(PortableServer_Servant _servant, const DsLogAdmin_RecordList* list, CORBA_Environment *ev));
void _ORBIT_skel_small_DsLogAdmin_Log_set_record_attribute(POA_DsLogAdmin_Log *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_set_record_attribute)(PortableServer_Servant _servant, const DsLogAdmin_RecordId id, const DsLogAdmin_NVList* attr_list, CORBA_Environment *ev));
void _ORBIT_skel_small_DsLogAdmin_Log_set_records_attribute(POA_DsLogAdmin_Log *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, CORBA_unsigned_long (*_impl_set_records_attribute)(PortableServer_Servant _servant, const CORBA_char * grammar, const CORBA_char * c, const DsLogAdmin_NVList* attr_list, CORBA_Environment *ev));
void _ORBIT_skel_small_DsLogAdmin_Log_get_record_attribute(POA_DsLogAdmin_Log *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, DsLogAdmin_NVList* (*_impl_get_record_attribute)(PortableServer_Servant _servant, const DsLogAdmin_RecordId id, CORBA_Environment *ev));
void _ORBIT_skel_small_DsLogAdmin_Log_copy(POA_DsLogAdmin_Log *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, DsLogAdmin_Log (*_impl_copy)(PortableServer_Servant _servant, DsLogAdmin_LogId* id, CORBA_Environment *ev));
void _ORBIT_skel_small_DsLogAdmin_Log_copy_with_id(POA_DsLogAdmin_Log *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, DsLogAdmin_Log (*_impl_copy_with_id)(PortableServer_Servant _servant, const DsLogAdmin_LogId id, CORBA_Environment *ev));
void _ORBIT_skel_small_DsLogAdmin_Log_flush(POA_DsLogAdmin_Log *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_flush)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_DsLogAdmin_BasicLog_destroy(POA_DsLogAdmin_BasicLog *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, void (*_impl_destroy)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_DsLogAdmin_LogMgr_list_logs(POA_DsLogAdmin_LogMgr *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, DsLogAdmin_LogList* (*_impl_list_logs)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_DsLogAdmin_LogMgr_find_log(POA_DsLogAdmin_LogMgr *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, DsLogAdmin_Log (*_impl_find_log)(PortableServer_Servant _servant, const DsLogAdmin_LogId id, CORBA_Environment *ev));
void _ORBIT_skel_small_DsLogAdmin_LogMgr_list_logs_by_id(POA_DsLogAdmin_LogMgr *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, DsLogAdmin_LogIdList* (*_impl_list_logs_by_id)(PortableServer_Servant _servant, CORBA_Environment *ev));
void _ORBIT_skel_small_DsLogAdmin_BasicLogFactory_create(POA_DsLogAdmin_BasicLogFactory *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, DsLogAdmin_BasicLog (*_impl_create)(PortableServer_Servant _servant, const DsLogAdmin_LogFullActionType full_action, const CORBA_unsigned_long_long max_size, DsLogAdmin_LogId* id, CORBA_Environment *ev));
void _ORBIT_skel_small_DsLogAdmin_BasicLogFactory_create_with_id(POA_DsLogAdmin_BasicLogFactory *_ORBIT_servant, gpointer _ORBIT_retval, gpointer *_ORBIT_args, CORBA_Context ctx,CORBA_Environment *ev, DsLogAdmin_BasicLog (*_impl_create_with_id)(PortableServer_Servant _servant, const DsLogAdmin_LogId id, const DsLogAdmin_LogFullActionType full_action, const CORBA_unsigned_long_long max_size, CORBA_Environment *ev));

/** stub prototypes **/
DsLogAdmin_RecordList* DsLogAdmin_Iterator_get(DsLogAdmin_Iterator _obj, const CORBA_unsigned_long position, const CORBA_unsigned_long how_many, CORBA_Environment *ev);
void DsLogAdmin_Iterator_destroy(DsLogAdmin_Iterator _obj, CORBA_Environment *ev);
DsLogAdmin_LogMgr DsLogAdmin_Log_my_factory(DsLogAdmin_Log _obj, CORBA_Environment *ev);
DsLogAdmin_LogId DsLogAdmin_Log_id(DsLogAdmin_Log _obj, CORBA_Environment *ev);
DsLogAdmin_QoSList* DsLogAdmin_Log_get_log_qos(DsLogAdmin_Log _obj, CORBA_Environment *ev);
void DsLogAdmin_Log_set_log_qos(DsLogAdmin_Log _obj, const DsLogAdmin_QoSList* qos, CORBA_Environment *ev);
CORBA_unsigned_long DsLogAdmin_Log_get_max_record_life(DsLogAdmin_Log _obj, CORBA_Environment *ev);
void DsLogAdmin_Log_set_max_record_life(DsLogAdmin_Log _obj, const CORBA_unsigned_long life, CORBA_Environment *ev);
CORBA_unsigned_long_long DsLogAdmin_Log_get_max_size(DsLogAdmin_Log _obj, CORBA_Environment *ev);
void DsLogAdmin_Log_set_max_size(DsLogAdmin_Log _obj, const CORBA_unsigned_long_long size, CORBA_Environment *ev);
CORBA_unsigned_long_long DsLogAdmin_Log_get_current_size(DsLogAdmin_Log _obj, CORBA_Environment *ev);
CORBA_unsigned_long_long DsLogAdmin_Log_get_n_records(DsLogAdmin_Log _obj, CORBA_Environment *ev);
DsLogAdmin_LogFullActionType DsLogAdmin_Log_get_log_full_action(DsLogAdmin_Log _obj, CORBA_Environment *ev);
void DsLogAdmin_Log_set_log_full_action(DsLogAdmin_Log _obj, const DsLogAdmin_LogFullActionType action, CORBA_Environment *ev);
DsLogAdmin_AdministrativeState DsLogAdmin_Log_get_administrative_state(DsLogAdmin_Log _obj, CORBA_Environment *ev);
void DsLogAdmin_Log_set_administrative_state(DsLogAdmin_Log _obj, const DsLogAdmin_AdministrativeState state, CORBA_Environment *ev);
DsLogAdmin_ForwardingState DsLogAdmin_Log_get_forwarding_state(DsLogAdmin_Log _obj, CORBA_Environment *ev);
void DsLogAdmin_Log_set_forwarding_state(DsLogAdmin_Log _obj, const DsLogAdmin_ForwardingState state, CORBA_Environment *ev);
DsLogAdmin_OperationalState DsLogAdmin_Log_get_operational_state(DsLogAdmin_Log _obj, CORBA_Environment *ev);
DsLogAdmin_TimeInterval DsLogAdmin_Log_get_interval(DsLogAdmin_Log _obj, CORBA_Environment *ev);
void DsLogAdmin_Log_set_interval(DsLogAdmin_Log _obj, const DsLogAdmin_TimeInterval* interval, CORBA_Environment *ev);
DsLogAdmin_AvailabilityStatus DsLogAdmin_Log_get_availability_status(DsLogAdmin_Log _obj, CORBA_Environment *ev);
DsLogAdmin_CapacityAlarmThresholdList* DsLogAdmin_Log_get_capacity_alarm_thresholds(DsLogAdmin_Log _obj, CORBA_Environment *ev);
void DsLogAdmin_Log_set_capacity_alarm_thresholds(DsLogAdmin_Log _obj, const DsLogAdmin_CapacityAlarmThresholdList* threshs, CORBA_Environment *ev);
DsLogAdmin_WeekMask* DsLogAdmin_Log_get_week_mask(DsLogAdmin_Log _obj, CORBA_Environment *ev);
void DsLogAdmin_Log_set_week_mask(DsLogAdmin_Log _obj, const DsLogAdmin_WeekMask* masks, CORBA_Environment *ev);
DsLogAdmin_RecordList* DsLogAdmin_Log_query(DsLogAdmin_Log _obj, const CORBA_char * grammar, const CORBA_char * c, DsLogAdmin_Iterator* i, CORBA_Environment *ev);
DsLogAdmin_RecordList* DsLogAdmin_Log_retrieve(DsLogAdmin_Log _obj, const DsLogAdmin_TimeT from_time, const CORBA_long how_many, DsLogAdmin_Iterator* i, CORBA_Environment *ev);
CORBA_unsigned_long DsLogAdmin_Log_match(DsLogAdmin_Log _obj, const CORBA_char * grammar, const CORBA_char * c, CORBA_Environment *ev);
CORBA_unsigned_long DsLogAdmin_Log_delete_records(DsLogAdmin_Log _obj, const CORBA_char * grammar, const CORBA_char * c, CORBA_Environment *ev);
CORBA_unsigned_long DsLogAdmin_Log_delete_records_by_id(DsLogAdmin_Log _obj, const DsLogAdmin_RecordIdList* ids, CORBA_Environment *ev);
void DsLogAdmin_Log_write_records(DsLogAdmin_Log _obj, const DsLogAdmin_Anys* records, CORBA_Environment *ev);
void DsLogAdmin_Log_write_recordlist(DsLogAdmin_Log _obj, const DsLogAdmin_RecordList* list, CORBA_Environment *ev);
void DsLogAdmin_Log_set_record_attribute(DsLogAdmin_Log _obj, const DsLogAdmin_RecordId id, const DsLogAdmin_NVList* attr_list, CORBA_Environment *ev);
CORBA_unsigned_long DsLogAdmin_Log_set_records_attribute(DsLogAdmin_Log _obj, const CORBA_char * grammar, const CORBA_char * c, const DsLogAdmin_NVList* attr_list, CORBA_Environment *ev);
DsLogAdmin_NVList* DsLogAdmin_Log_get_record_attribute(DsLogAdmin_Log _obj, const DsLogAdmin_RecordId id, CORBA_Environment *ev);
DsLogAdmin_Log DsLogAdmin_Log_copy(DsLogAdmin_Log _obj, DsLogAdmin_LogId* id, CORBA_Environment *ev);
DsLogAdmin_Log DsLogAdmin_Log_copy_with_id(DsLogAdmin_Log _obj, const DsLogAdmin_LogId id, CORBA_Environment *ev);
void DsLogAdmin_Log_flush(DsLogAdmin_Log _obj, CORBA_Environment *ev);
#define DsLogAdmin_BasicLog_my_factory DsLogAdmin_Log_my_factory
#define DsLogAdmin_BasicLog_id DsLogAdmin_Log_id
#define DsLogAdmin_BasicLog_get_log_qos DsLogAdmin_Log_get_log_qos
#define DsLogAdmin_BasicLog_set_log_qos DsLogAdmin_Log_set_log_qos
#define DsLogAdmin_BasicLog_get_max_record_life DsLogAdmin_Log_get_max_record_life
#define DsLogAdmin_BasicLog_set_max_record_life DsLogAdmin_Log_set_max_record_life
#define DsLogAdmin_BasicLog_get_max_size DsLogAdmin_Log_get_max_size
#define DsLogAdmin_BasicLog_set_max_size DsLogAdmin_Log_set_max_size
#define DsLogAdmin_BasicLog_get_current_size DsLogAdmin_Log_get_current_size
#define DsLogAdmin_BasicLog_get_n_records DsLogAdmin_Log_get_n_records
#define DsLogAdmin_BasicLog_get_log_full_action DsLogAdmin_Log_get_log_full_action
#define DsLogAdmin_BasicLog_set_log_full_action DsLogAdmin_Log_set_log_full_action
#define DsLogAdmin_BasicLog_get_administrative_state DsLogAdmin_Log_get_administrative_state
#define DsLogAdmin_BasicLog_set_administrative_state DsLogAdmin_Log_set_administrative_state
#define DsLogAdmin_BasicLog_get_forwarding_state DsLogAdmin_Log_get_forwarding_state
#define DsLogAdmin_BasicLog_set_forwarding_state DsLogAdmin_Log_set_forwarding_state
#define DsLogAdmin_BasicLog_get_operational_state DsLogAdmin_Log_get_operational_state
#define DsLogAdmin_BasicLog_get_interval DsLogAdmin_Log_get_interval
#define DsLogAdmin_BasicLog_set_interval DsLogAdmin_Log_set_interval
#define DsLogAdmin_BasicLog_get_availability_status DsLogAdmin_Log_get_availability_status
#define DsLogAdmin_BasicLog_get_capacity_alarm_thresholds DsLogAdmin_Log_get_capacity_alarm_thresholds
#define DsLogAdmin_BasicLog_set_capacity_alarm_thresholds DsLogAdmin_Log_set_capacity_alarm_thresholds
#define DsLogAdmin_BasicLog_get_week_mask DsLogAdmin_Log_get_week_mask
#define DsLogAdmin_BasicLog_set_week_mask DsLogAdmin_Log_set_week_mask
#define DsLogAdmin_BasicLog_query DsLogAdmin_Log_query
#define DsLogAdmin_BasicLog_retrieve DsLogAdmin_Log_retrieve
#define DsLogAdmin_BasicLog_match DsLogAdmin_Log_match
#define DsLogAdmin_BasicLog_delete_records DsLogAdmin_Log_delete_records
#define DsLogAdmin_BasicLog_delete_records_by_id DsLogAdmin_Log_delete_records_by_id
#define DsLogAdmin_BasicLog_write_records DsLogAdmin_Log_write_records
#define DsLogAdmin_BasicLog_write_recordlist DsLogAdmin_Log_write_recordlist
#define DsLogAdmin_BasicLog_set_record_attribute DsLogAdmin_Log_set_record_attribute
#define DsLogAdmin_BasicLog_set_records_attribute DsLogAdmin_Log_set_records_attribute
#define DsLogAdmin_BasicLog_get_record_attribute DsLogAdmin_Log_get_record_attribute
#define DsLogAdmin_BasicLog_copy DsLogAdmin_Log_copy
#define DsLogAdmin_BasicLog_copy_with_id DsLogAdmin_Log_copy_with_id
#define DsLogAdmin_BasicLog_flush DsLogAdmin_Log_flush
void DsLogAdmin_BasicLog_destroy(DsLogAdmin_BasicLog _obj, CORBA_Environment *ev);
DsLogAdmin_LogList* DsLogAdmin_LogMgr_list_logs(DsLogAdmin_LogMgr _obj, CORBA_Environment *ev);
DsLogAdmin_Log DsLogAdmin_LogMgr_find_log(DsLogAdmin_LogMgr _obj, const DsLogAdmin_LogId id, CORBA_Environment *ev);
DsLogAdmin_LogIdList* DsLogAdmin_LogMgr_list_logs_by_id(DsLogAdmin_LogMgr _obj, CORBA_Environment *ev);
#define DsLogAdmin_BasicLogFactory_list_logs DsLogAdmin_LogMgr_list_logs
#define DsLogAdmin_BasicLogFactory_find_log DsLogAdmin_LogMgr_find_log
#define DsLogAdmin_BasicLogFactory_list_logs_by_id DsLogAdmin_LogMgr_list_logs_by_id
DsLogAdmin_BasicLog DsLogAdmin_BasicLogFactory_create(DsLogAdmin_BasicLogFactory _obj, const DsLogAdmin_LogFullActionType full_action, const CORBA_unsigned_long_long max_size, DsLogAdmin_LogId* id, CORBA_Environment *ev);
DsLogAdmin_BasicLog DsLogAdmin_BasicLogFactory_create_with_id(DsLogAdmin_BasicLogFactory _obj, const DsLogAdmin_LogId id, const DsLogAdmin_LogFullActionType full_action, const CORBA_unsigned_long_long max_size, CORBA_Environment *ev);
#include <orbit/orb-core/orbit-interface.h>

#ifdef ORBIT_IDL_C_IMODULE_DsLogAdmin
static 
#else
extern 
#endif
ORBit_IInterface DsLogAdmin_Iterator__iinterface;
#define DsLogAdmin_Iterator_IMETHODS_LEN 2
#ifdef ORBIT_IDL_C_IMODULE_DsLogAdmin
static 
#else
extern 
#endif
ORBit_IMethod DsLogAdmin_Iterator__imethods[DsLogAdmin_Iterator_IMETHODS_LEN];
#ifdef ORBIT_IDL_C_IMODULE_DsLogAdmin
static 
#else
extern 
#endif
ORBit_IInterface DsLogAdmin_Log__iinterface;
#define DsLogAdmin_Log_IMETHODS_LEN 37
#ifdef ORBIT_IDL_C_IMODULE_DsLogAdmin
static 
#else
extern 
#endif
ORBit_IMethod DsLogAdmin_Log__imethods[DsLogAdmin_Log_IMETHODS_LEN];
#ifdef ORBIT_IDL_C_IMODULE_DsLogAdmin
static 
#else
extern 
#endif
ORBit_IInterface DsLogAdmin_BasicLog__iinterface;
#define DsLogAdmin_BasicLog_IMETHODS_LEN 1
#ifdef ORBIT_IDL_C_IMODULE_DsLogAdmin
static 
#else
extern 
#endif
ORBit_IMethod DsLogAdmin_BasicLog__imethods[DsLogAdmin_BasicLog_IMETHODS_LEN];
#ifdef ORBIT_IDL_C_IMODULE_DsLogAdmin
static 
#else
extern 
#endif
ORBit_IInterface DsLogAdmin_LogMgr__iinterface;
#define DsLogAdmin_LogMgr_IMETHODS_LEN 3
#ifdef ORBIT_IDL_C_IMODULE_DsLogAdmin
static 
#else
extern 
#endif
ORBit_IMethod DsLogAdmin_LogMgr__imethods[DsLogAdmin_LogMgr_IMETHODS_LEN];
#ifdef ORBIT_IDL_C_IMODULE_DsLogAdmin
static 
#else
extern 
#endif
ORBit_IInterface DsLogAdmin_BasicLogFactory__iinterface;
#define DsLogAdmin_BasicLogFactory_IMETHODS_LEN 2
#ifdef ORBIT_IDL_C_IMODULE_DsLogAdmin
static 
#else
extern 
#endif
ORBit_IMethod DsLogAdmin_BasicLogFactory__imethods[DsLogAdmin_BasicLogFactory_IMETHODS_LEN];

/** IMethods index */

#ifndef __DsLogAdmin_Iterator__imethods_index
#define __DsLogAdmin_Iterator__imethods_index
typedef enum {
	DsLogAdmin_Iterator_get__imethods_index,
	DsLogAdmin_Iterator_destroy__imethods_index
} DsLogAdmin_Iterator__imethods_index;
#endif /* __DsLogAdmin_Iterator__imethods_index */

#ifndef __DsLogAdmin_Log__imethods_index
#define __DsLogAdmin_Log__imethods_index
typedef enum {
	DsLogAdmin_Log_my_factory__imethods_index,
	DsLogAdmin_Log_id__imethods_index,
	DsLogAdmin_Log_get_log_qos__imethods_index,
	DsLogAdmin_Log_set_log_qos__imethods_index,
	DsLogAdmin_Log_get_max_record_life__imethods_index,
	DsLogAdmin_Log_set_max_record_life__imethods_index,
	DsLogAdmin_Log_get_max_size__imethods_index,
	DsLogAdmin_Log_set_max_size__imethods_index,
	DsLogAdmin_Log_get_current_size__imethods_index,
	DsLogAdmin_Log_get_n_records__imethods_index,
	DsLogAdmin_Log_get_log_full_action__imethods_index,
	DsLogAdmin_Log_set_log_full_action__imethods_index,
	DsLogAdmin_Log_get_administrative_state__imethods_index,
	DsLogAdmin_Log_set_administrative_state__imethods_index,
	DsLogAdmin_Log_get_forwarding_state__imethods_index,
	DsLogAdmin_Log_set_forwarding_state__imethods_index,
	DsLogAdmin_Log_get_operational_state__imethods_index,
	DsLogAdmin_Log_get_interval__imethods_index,
	DsLogAdmin_Log_set_interval__imethods_index,
	DsLogAdmin_Log_get_availability_status__imethods_index,
	DsLogAdmin_Log_get_capacity_alarm_thresholds__imethods_index,
	DsLogAdmin_Log_set_capacity_alarm_thresholds__imethods_index,
	DsLogAdmin_Log_get_week_mask__imethods_index,
	DsLogAdmin_Log_set_week_mask__imethods_index,
	DsLogAdmin_Log_query__imethods_index,
	DsLogAdmin_Log_retrieve__imethods_index,
	DsLogAdmin_Log_match__imethods_index,
	DsLogAdmin_Log_delete_records__imethods_index,
	DsLogAdmin_Log_delete_records_by_id__imethods_index,
	DsLogAdmin_Log_write_records__imethods_index,
	DsLogAdmin_Log_write_recordlist__imethods_index,
	DsLogAdmin_Log_set_record_attribute__imethods_index,
	DsLogAdmin_Log_set_records_attribute__imethods_index,
	DsLogAdmin_Log_get_record_attribute__imethods_index,
	DsLogAdmin_Log_copy__imethods_index,
	DsLogAdmin_Log_copy_with_id__imethods_index,
	DsLogAdmin_Log_flush__imethods_index
} DsLogAdmin_Log__imethods_index;
#endif /* __DsLogAdmin_Log__imethods_index */

#ifndef __DsLogAdmin_BasicLog__imethods_index
#define __DsLogAdmin_BasicLog__imethods_index
typedef enum {
	DsLogAdmin_BasicLog_destroy__imethods_index
} DsLogAdmin_BasicLog__imethods_index;
#endif /* __DsLogAdmin_BasicLog__imethods_index */

#ifndef __DsLogAdmin_LogMgr__imethods_index
#define __DsLogAdmin_LogMgr__imethods_index
typedef enum {
	DsLogAdmin_LogMgr_list_logs__imethods_index,
	DsLogAdmin_LogMgr_find_log__imethods_index,
	DsLogAdmin_LogMgr_list_logs_by_id__imethods_index
} DsLogAdmin_LogMgr__imethods_index;
#endif /* __DsLogAdmin_LogMgr__imethods_index */

#ifndef __DsLogAdmin_BasicLogFactory__imethods_index
#define __DsLogAdmin_BasicLogFactory__imethods_index
typedef enum {
	DsLogAdmin_BasicLogFactory_create__imethods_index,
	DsLogAdmin_BasicLogFactory_create_with_id__imethods_index
} DsLogAdmin_BasicLogFactory__imethods_index;
#endif /* __DsLogAdmin_BasicLogFactory__imethods_index */

#ifndef __ORBIT_IMETHODS_INDEX
#define __ORBIT_IMETHODS_INDEX
#define ORBIT_IMETHODS_INDEX(m) (m ## __imethods_index)
#endif /* __ORBIT_IMETHODS_INDEX */

#ifdef __cplusplus
}
#endif /* __cplusplus */

#ifndef EXCLUDE_ORBIT_H
#include <orbit/orbit.h>

#endif /* EXCLUDE_ORBIT_H */
#endif
#undef ORBIT_IDL_SERIAL
